function(getenv k p)
  if(string63(k))
    set(__i edge(environment))
    while(__i GREATER_EQUAL 0)
      if(has63(environment[__i] k))
        set(__b environment[__i][k])
        set(__e9 "")
        if(p)
          set(__e9 has(__b p))
        else()
          set(__e9 __b)
        endif()
        return(PROPAGATE "${__e9}")
      else()
        set(__i __i - 1)
      endif()
    endwhile()
  endif()
endfunction()
function(macro_function k)
  return(PROPAGATE getenv(k "macro"))
endfunction()
function(macro63 k)
  return(PROPAGATE is63(macro_function(k)))
endfunction()
function(special63 k)
  return(PROPAGATE is63(getenv(k "special")))
endfunction()
function(special_form63 form)
  return(PROPAGATE NOT atom63(form) AND special63(hd(form)))
endfunction()
function(statement63 k)
  return(PROPAGATE special63(k) AND getenv(k "stmt"))
endfunction()
function(symbol_expansion k)
  return(PROPAGATE getenv(k "symbol"))
endfunction()
function(symbol63 k)
  return(PROPAGATE is63(symbol_expansion(k)))
endfunction()
function(variable63 k)
  return(PROPAGATE is63(getenv(k "variable")))
endfunction()
function(bound63 x)
  return(PROPAGATE macro63(x) OR (special63(x) OR (symbol63(x) OR variable63(x))))
endfunction()
function(keyword63 atom)
  return(PROPAGATE string63(atom) AND (_35(atom) GREATER 1 AND _37eq(char(atom 0) ":")))
endfunction()
function(quoted form)
  if(keyword63(form))
    return(PROPAGATE form)
  else()
    if(string63(form))
      return(PROPAGATE escape(form))
    else()
      if(atom63(form))
        return(PROPAGATE form)
      else()
        return(PROPAGATE join("quasilist" map(quoted form)))
      endif()
    endif()
  endif()
endfunction()
function(literal s)
  if(string_literal63(s))
    return(PROPAGATE s)
  else()
    return(PROPAGATE quoted(s))
  endif()
endfunction()
function(stash42 args)
  if(props63(args))
    if(_37eq(has(setenv("target" toplevel ON) "value") "py"))
      set(__l array(args))
      set(____o args)
      set(__k "")
      for (__k in ____o) {
        set(__v ____o[__k])
        set(__e12 "")
        if(numeric63(__k))
          set(__e12 parseInt(__k))
        else()
          set(__e12 __k)
        endif()
        set(__k1 "${__e12}")
        if(NOT number63(__k1))
          add(__l "%compile" __k1 "|=|" __v)
        endif()
      }
      return(PROPAGATE __l)
    else()
      if(_37eq(has(setenv("target" toplevel ON) "value") "cmake"))
        set(__l1 array(args))
        set(____o1 args)
        set(__k2 "")
        for (__k2 in ____o1) {
          set(__v1 ____o1[__k2])
          set(__e11 "")
          if(numeric63(__k2))
            set(__e11 parseInt(__k2))
          else()
            set(__e11 __k2)
          endif()
          set(__k3 "${__e11}")
          if(NOT number63(__k3))
            add(__l1 "%compile" __k3 "| |" __v1)
          endif()
        }
        return(PROPAGATE __l1)
      else()
        set(__l2 "%object" "\"_stash\"" ON)
        set(____o2 args)
        set(__k4 "")
        for (__k4 in ____o2) {
          set(__v2 ____o2[__k4])
          set(__e10 "")
          if(numeric63(__k4))
            set(__e10 parseInt(__k4))
          else()
            set(__e10 __k4)
          endif()
          set(__k5 "${__e10}")
          if(NOT number63(__k5))
            add(__l2 literal(__k5))
            add(__l2 __v2)
          endif()
        }
        return(PROPAGATE join( args __l2))
      endif()
    endif()
  else()
    return(PROPAGATE args)
  endif()
endfunction()
function(bias k)
  if(number63(k))
    if(_37eq(has(setenv("target" toplevel ON) "value") "lua"))
      set(k k + 1)
    endif()
    return(PROPAGATE k)
  else()
    return(PROPAGATE k)
  endif()
endfunction()
function(bind lh rh)
  if(atom63(lh))
    return(PROPAGATE lh rh)
  else()
    if(hd63(lh ","))
      return(PROPAGATE bind(cut(lh 1) rh))
    else()
      if(_37eq(hd(lh) "t"))
        set(____id lh)
        set(___ has(____id 0))
        set(__var has(____id 1))
        set(__val has(____id 2))
        set(__val1 either(__val __var))
        return(PROPAGATE bind("o" __var "the" __val1 rh))
      else()
        if(_37eq(hd(lh) "o"))
          set(____id1 lh)
          set(___1 has(____id1 0))
          set(__var1 has(____id1 1))
          set(__val2 has(____id1 2))
          return(PROPAGATE __var1 "if" "nil?" rh __val2 rh)
        else()
          set(__id2 unique("id"))
          set(__bs __id2 rh)
          set(____o3 lh)
          set(__k6 "")
          for (__k6 in ____o3) {
            set(__v3 ____o3[__k6])
            set(__e13 "")
            if(numeric63(__k6))
              set(__e13 parseInt(__k6))
            else()
              set(__e13 __k6)
            endif()
            set(__k7 "${__e13}")
            set(__e14 "")
            if(_37eq(__k7 "rest"))
              set(__e14 "cut" __id2 _35(lh))
            else()
              set(__e14 "has" __id2 "quote" bias(__k7))
            endif()
            set(__x12 "${__e14}")
            if(is63(__k7))
              set(__e15 "")
              if(_37eq(__v3 ON))
                set(__e15 __k7)
              else()
                set(__e15 __v3)
              endif()
              set(__k8 "${__e15}")
              set(__bs join(__bs bind(__k8 __x12)))
            endif()
          }
          return(PROPAGATE __bs)
        endif()
      endif()
    endif()
  endif()
endfunction()
function(__arguments37__macro from)
  set(____x16 object("target"))
  set(____x16.js "%idx" "%idx" "%idx" "Array" "prototype" "slice" "call" "arguments" from)
  set(____x16.py "list" "|_args|")
  set(____x16.lua "quasilist" "|...|")
  set(____x16.cmake "%ref" "ARGN")
  return(PROPAGATE ____x16)
endfunction()
setenv("arguments%" macro __arguments37__macro)
function(body_docstring body)
  if(_35(body) GREATER 1 AND string_literal63(hd(body)))
    return(PROPAGATE hd(body) tl(body))
  else()
    return(PROPAGATE  body)
  endif()
endfunction()
function(bind42 args body)
  set(__args1 )
  function(rest)
    set(__args1.rest ON)
    set(____x28 object("target"))
    set(____x28.py "obj" "...")
    return(PROPAGATE "unstash" "quasilist" "..." ____x28)
  endfunction()
  if(atom63(args))
    return(PROPAGATE __args1 join("let" args rest() body))
  else()
    set(____id3 body_docstring(body))
    set(__doc has(____id3 0))
    set(__body has(____id3 1))
    set(__pre )
    set(__bs1 )
    set(__inits )
    set(__r20 unique("r"))
    set(____o4 args)
    set(__k9 "")
    for (__k9 in ____o4) {
      set(__v4 ____o4[__k9])
      set(__e16 "")
      if(numeric63(__k9))
        set(__e16 parseInt(__k9))
      else()
        set(__e16 __k9)
      endif()
      set(__k10 "${__e16}")
      if(number63(__k10))
        if(atom63(__v4))
          add(__args1 __v4)
        else()
          if(_37eq(hd(__v4) "o"))
            set(____id4 __v4)
            set(___2 has(____id4 0))
            set(__var2 has(____id4 1))
            set(__val3 has(____id4 2))
            add(__args1 __var2)
            add(__inits "%if" "nil?" __var2 "%set" __var2 __val3)
          else()
            if(_37eq(hd(__v4) "t"))
              set(____id5 __v4)
              set(___3 has(____id5 0))
              set(__var3 has(____id5 1))
              set(__val4 has(____id5 2))
              set(__val5 either(__val4 __var3))
              add(__args1 __var3)
              add(__inits "%if" "nil?" __var3 "%set" __var3 "the" __val5)
            else()
              set(__x40 unique("x"))
              add(__args1 __x40)
              set(__bs1 join(__bs1 __v4 __x40))
            endif()
          endif()
        endif()
      endif()
    }
    if(props63(args))
      set(__pre join(__pre __r20 rest()))
      set(__n5 _35(__args1))
      set(__i6 0)
      while(__i6 LESS __n5)
        set(__v5 __args1[__i6])
        set(__pre join(__pre __v5 "destash!" __v5 __r20))
        set(__i6 __i6 + 1)
      endwhile()
      set(__bs1 join(__bs1 props(args) __r20))
    endif()
    set(__forms join("let" __pre __inits join("let" __bs1 __body)))
    set(__e17 "")
    if(is63(__doc))
      set(__e17 "do" __doc __forms)
    else()
      set(__e17 __forms)
    endif()
    return(PROPAGATE __args1 "${__e17}")
  endif()
endfunction()
function(quoting63 depth)
  return(PROPAGATE number63(depth))
endfunction()
function(quasiquoting63 depth)
  return(PROPAGATE quoting63(depth) AND depth GREATER 0)
endfunction()
function(can_unquote63 depth)
  return(PROPAGATE quoting63(depth) AND _37eq(depth 1))
endfunction()
function(quasisplice63 x depth)
  return(PROPAGATE can_unquote63(depth) AND (NOT atom63(x) AND _37eq(hd(x) "unquote-splicing")))
endfunction()
function(expand_local __x51)
  set(____id6 __x51)
  set(__x52 has(____id6 0))
  set(__name has(____id6 1))
  set(__value has(____id6 2))
  setenv(__name variable ON)
  return(PROPAGATE "%local" __name macroexpand(__value))
endfunction()
function(expand_function __x54)
  set(____id7 __x54)
  set(__x55 has(____id7 0))
  set(__args has(____id7 1))
  set(__body1 cut(____id7 2))
  add(environment )
  set(____r28 "")
  try{
    set(____o5 __args)
    set(____i7 "")
    for (____i7 in ____o5) {
      set(____x56 ____o5[____i7])
      set(__e18 "")
      if(numeric63(____i7))
        set(__e18 parseInt(____i7))
      else()
        set(__e18 ____i7)
      endif()
      set(____i71 "${__e18}")
      setenv(____x56 variable ON)
    }
    set(____r28 join("%function" __args macroexpand(__body1)))
  }
  finally{
    drop(environment)
  }
  return(PROPAGATE ____r28)
endfunction()
function(expand_definition __x58)
  set(____id8 __x58)
  set(__x59 has(____id8 0))
  set(__name1 has(____id8 1))
  set(__args11 has(____id8 2))
  set(__body2 cut(____id8 3))
  add(environment )
  set(____r31 "")
  try{
    set(____o6 __args11)
    set(____i8 "")
    for (____i8 in ____o6) {
      set(____x60 ____o6[____i8])
      set(__e19 "")
      if(numeric63(____i8))
        set(__e19 parseInt(____i8))
      else()
        set(__e19 ____i8)
      endif()
      set(____i81 "${__e19}")
      setenv(____x60 variable ON)
    }
    set(____r31 join(__x59 __name1 __args11 macroexpand(__body2)))
  }
  finally{
    drop(environment)
  }
  return(PROPAGATE ____r31)
endfunction()
function(expand_macro form)
  return(PROPAGATE macroexpand(expand1(form)))
endfunction()
function(expand1 __x62)
  set(____id9 __x62)
  set(__name2 has(____id9 0))
  set(__body3 cut(____id9 1))
  return(PROPAGATE apply(macro_function(__name2) __body3))
endfunction()
function(real63 x)
  return(PROPAGATE number63(x) AND (NOT nan63(x) AND NOT inf63(x)))
endfunction()
function(valid_access63 str)
  return(PROPAGATE _35(str) GREATER 2 AND (NOT( _37eq("." char(str 0))) AND (NOT( _37eq("." char(str edge(str)))) AND NOT search(str ".."))))
endfunction()
function(parse_access str)
  function(__f3 a b)
    set(__n8 number(a))
    if(is63(__n8))
      return(PROPAGATE "at" b __n8)
    else()
      return(PROPAGATE "%idx" b a)
    endif()
  endfunction()
  return(PROPAGATE reduce(__f3 reverse(split(str "."))))
endfunction()
function(parse_access63 form)
  return(PROPAGATE string63(form) AND (NOT string_literal63(form) AND (NOT id_literal63(form) AND (is63(search(form ".")) AND valid_access63(form)))))
endfunction()
function(expand_access form)
  if(parse_access63(form))
    return(PROPAGATE parse_access(form))
  endif()
endfunction()
set(expand_atom_functions42 )
add(expand_atom_functions42 expand_access)
function(expand_atom form)
  set(____x65 expand_atom_functions42)
  set(____i9 0)
  while(____i9 LESS _35(____x65))
    set(__f ____x65[____i9])
    set(__x66 __f(form))
    if(NOT( _37eq(__x66 "")))
      return(PROPAGATE __x66)
    endif()
    set(____i9 ____i9 + 1)
  endwhile()
  return(PROPAGATE form)
endfunction()
function(macroexpand_atom form)
  if(symbol63(form))
    return(PROPAGATE macroexpand(symbol_expansion(form)))
  else()
    set(__expr expand_atom(form))
    if(_37eq(__expr form))
      return(PROPAGATE __expr)
    else()
      return(PROPAGATE macroexpand(__expr))
    endif()
  endif()
endfunction()
function(macroexpand form)
  if(atom63(form))
    return(PROPAGATE macroexpand_atom(form))
  else()
    if(none63(form))
      return(PROPAGATE map(macroexpand form))
    else()
      set(__x67 macroexpand(hd(form)))
      set(__args2 tl(form))
      if(nil63(__x67))
        return(PROPAGATE macroexpand(__args2))
      else()
        if(_37eq(__x67 "%local"))
          return(PROPAGATE expand_local(form))
        else()
          if(_37eq(__x67 "%function"))
            return(PROPAGATE expand_function(form))
          else()
            if(_37eq(__x67 "%global-function"))
              return(PROPAGATE expand_definition(form))
            else()
              if(_37eq(__x67 "%local-function"))
                return(PROPAGATE expand_definition(form))
              else()
                if(_37eq(__x67 "%expansion"))
                  return(PROPAGATE form[1])
                else()
                  if(macro63(__x67))
                    return(PROPAGATE expand_macro(form))
                  else()
                    return(PROPAGATE join(__x67 map(macroexpand __args2)))
                  endif()
                endif()
              endif()
            endif()
          endif()
        endif()
      endif()
    endif()
  endif()
endfunction()
function(macroexpand form)
  print(str("macroexpand" form))
  if(parse_access63(form))
    return(PROPAGATE macroexpand(parse_access(form)))
  else()
    if(symbol63(form))
      return(PROPAGATE macroexpand(symbol_expansion(form)))
    else()
      if(atom63(form))
        return(PROPAGATE form)
      else()
        if(none63(form))
          return(PROPAGATE map(macroexpand form))
        else()
          set(__x70 macroexpand(hd(form)))
          set(__args3 tl(form))
          set(__form join(__x70 __args3))
          if(_37eq(__x70 ""))
            return(PROPAGATE macroexpand(__args3))
          else()
            if(_37eq(__x70 "%local"))
              return(PROPAGATE expand_local(__form))
            else()
              if(_37eq(__x70 "%function"))
                return(PROPAGATE expand_function(__form))
              else()
                if(_37eq(__x70 "%global-function"))
                  return(PROPAGATE expand_definition(__form))
                else()
                  if(_37eq(__x70 "%local-function"))
                    return(PROPAGATE expand_definition(__form))
                  else()
                    if(_37eq(__x70 "%expansion"))
                      return(PROPAGATE __form[1])
                    else()
                      if(macro63(__x70))
                        return(PROPAGATE expand_macro(__form))
                      else()
                        return(PROPAGATE join(__x70 map(macroexpand __args3)))
                      endif()
                    endif()
                  endif()
                endif()
              endif()
            endif()
          endif()
        endif()
      endif()
    endif()
  endif()
endfunction()
function(macroexpand form)
  if(parse_access63(form))
    return(PROPAGATE macroexpand(parse_access(form)))
  else()
    if(symbol63(form))
      return(PROPAGATE macroexpand(symbol_expansion(form)))
    else()
      if(atom63(form))
        return(PROPAGATE form)
      else()
        set(__x73 hd(form))
        if(_37eq(__x73 "%local"))
          return(PROPAGATE expand_local(form))
        else()
          if(_37eq(__x73 "%function"))
            return(PROPAGATE expand_function(form))
          else()
            if(_37eq(__x73 "%global-function"))
              return(PROPAGATE expand_definition(form))
            else()
              if(_37eq(__x73 "%local-function"))
                return(PROPAGATE expand_definition(form))
              else()
                if(_37eq(__x73 "%expansion"))
                  return(PROPAGATE form[1])
                else()
                  if(macro63(__x73))
                    return(PROPAGATE expand_macro(form))
                  else()
                    if(parse_access63(__x73))
                      return(PROPAGATE macroexpand(join(parse_access(__x73) tl(form))))
                    else()
                      return(PROPAGATE map(macroexpand form))
                    endif()
                  endif()
                endif()
              endif()
            endif()
          endif()
        endif()
      endif()
    endif()
  endif()
endfunction()
function(quasiquote_list form depth)
  set(__xs "quasilist")
  set(____o7 form)
  set(__k11 "")
  for (__k11 in ____o7) {
    set(__v6 ____o7[__k11])
    set(__e20 "")
    if(numeric63(__k11))
      set(__e20 parseInt(__k11))
    else()
      set(__e20 __k11)
    endif()
    set(__k12 "${__e20}")
    if(NOT number63(__k12))
      set(__e21 "")
      if(quasisplice63(__v6 depth))
        set(__e21 quasiexpand(__v6[1]))
      else()
        set(__e21 quasiexpand(__v6 depth))
      endif()
      set(__v7 "${__e21}")
      set(last(__xs)[__k12] __v7)
    endif()
  }
  set(____x77 form)
  set(____i11 0)
  while(____i11 LESS _35(____x77))
    set(__x78 ____x77[____i11])
    if(quasisplice63(__x78 depth))
      set(__x79 quasiexpand(__x78[1]))
      add(__xs __x79)
      add(__xs "quasilist")
    else()
      add(last(__xs) quasiexpand(__x78 depth))
    endif()
    set(____i11 ____i11 + 1)
  endwhile()
  function(__f4 x)
    return(PROPAGATE _35(x) GREATER 1 OR (NOT( _37eq(hd(x) "quasilist")) OR props63(x)))
  endfunction()
  set(__pruned keep(__f4 __xs))
  if(one63(__pruned))
    return(PROPAGATE hd(__pruned))
  else()
    return(PROPAGATE join("join" __pruned))
  endif()
endfunction()
function(quasiexpand form depth)
  if(quasiquoting63(depth))
    if(atom63(form))
      return(PROPAGATE "quote" form)
    else()
      if(can_unquote63(depth) AND _37eq(hd(form) "unquote"))
        return(PROPAGATE quasiexpand(form[1]))
      else()
        if(_37eq(hd(form) "unquote") OR _37eq(hd(form) "unquote-splicing"))
          return(PROPAGATE quasiquote_list(form depth - 1))
        else()
          if(_37eq(hd(form) "quasiquote"))
            return(PROPAGATE quasiquote_list(form depth + 1))
          else()
            return(PROPAGATE quasiquote_list(form depth))
          endif()
        endif()
      endif()
    endif()
  else()
    if(atom63(form))
      return(PROPAGATE form)
    else()
      if(_37eq(hd(form) "quote"))
        return(PROPAGATE form)
      else()
        if(_37eq(hd(form) "quasiquote"))
          return(PROPAGATE quasiexpand(form[1] 1))
        else()
          function(__f5 x)
            return(PROPAGATE quasiexpand(x depth))
          endfunction()
          return(PROPAGATE map(__f5 form))
        endif()
      endif()
    endif()
  endif()
endfunction()
function(expand_if __x83)
  set(____id10 __x83)
  set(__a has(____id10 0))
  set(__b1 has(____id10 1))
  set(__c cut(____id10 2))
  if(is63(__b1))
    return(PROPAGATE join("%if" __a __b1 expand_if(__c)))
  else()
    if(is63(__a))
      return(PROPAGATE __a)
    endif()
  endif()
endfunction()
setenv("indent-level" toplevel ON value 0)
setenv("indent-level" symbol "get-value" "quote" "indent-level")
function(indentation)
  set(__s "")
  set(__i12 0)
  while(__i12 LESS has(setenv("indent-level" toplevel ON) "value"))
    set(__s cat(__s "  "))
    set(__i12 __i12 + 1)
  endwhile()
  return(PROPAGATE __s)
endfunction()
set(reserved 
  ALL 
    "=" ON
    "==" ON
    "+" ON
    "_" ON
    "%" ON
    "*" ON
    "/" ON
    "<" ON
    ">" ON
    "<=" ON
    ">=" ON
  
  JS 
    BREAK ON
    CASE ON
    CATCH ON
    CLASS ON
    CONST ON
    CONTINUE ON
    DEBUGGER ON
    DEFAULT ON
    DELETE ON
    DO ON
    ELSE ON
    EVAL ON
    FINALLY ON
    FOR ON
    FUNCTION ON
    IF ON
    IMPORT ON
    IN ON
    INSTANCEOF ON
    LET ON
    RETURN ON
    SWITCH ON
    THROW ON
    TRY ON
    TYPEOF ON
    VAR ON
    VOID ON
    WITH ON
  
  LUA 
    AND ON
    END ON
    IN ON
    LOAD ON
    REPEAT ON
    WHILE ON
    BREAK ON
    FALSE ON
    LOCAL ON
    RETURN ON
    DO ON
    FOR ON
    NIL ON
    THEN ON
    ELSE ON
    FUNCTION ON
    NOT ON
    TRUE ON
    ELSEIF ON
    IF ON
    OR ON
    UNTIL ON
  
  PY 
    AND ON
    EXCEPT ON
    LAMBDA ON
    WITH ON
    AS ON
    FINALLY ON
    NONLOCAL ON
    WHILE ON
    ASSERT ON
    FALSE ON
    NONE ON
    YIELD ON
    BREAK ON
    FOR ON
    NOT ON
    CLASS ON
    FROM ON
    OR ON
    CONTINUE ON
    GLOBAL ON
    PASS ON
    DEF ON
    IF ON
    RAISE ON
    DEL ON
    IMPORT ON
    RETURN ON
    ELIF ON
    IN ON
    TRUE ON
    ELSE ON
    IS ON
    TRY ON
    STR ON
    PRINT ON
  
  CMAKE 
    "AND" ON
    "OR" ON
    "TRUE" ON
    "FALSE" ON
    "ON" ON
    "OFF" ON
    "Y" ON
    "N" ON
  
)
function(reserved63 x)
  return(PROPAGATE has63(reserved.all x) OR has63(reserved[has(setenv("target" toplevel ON) "value")] x))
endfunction()
function(valid_code63 n)
  return(PROPAGATE number_code63(n) OR (n GREATER 64 AND n LESS 91 OR (n GREATER 96 AND n LESS 123 OR _37eq(n 95))))
endfunction()
function(compile_keyword x)
  return(PROPAGATE escape(x))
endfunction()
function(compile_name name)
  if(keyword63(name))
    return(PROPAGATE compile(clip(name 1)))
  else()
    return(PROPAGATE compile(name))
  endif()
endfunction()
function(compile_id id raw63)
  if(keyword63(id))
    return(PROPAGATE compile_keyword(id))
  else()
    if(_37eq(code(id 0) 46))
      return(PROPAGATE cat("." compile_id(clip(id 1) ON)))
    else()
      set(__e22 "")
      if(_37eq(has(setenv("target" toplevel ON) "value") "py"))
        set(__e22 "L_")
      else()
        set(__e22 "_")
      endif()
      set(__x89 "${__e22}")
      set(__e23 "")
      if(number_code63(code(id 0)))
        set(__e23 __x89)
      else()
        set(__e23 "")
      endif()
      set(__id11 "${__e23}")
      set(__i13 0)
      while(__i13 LESS _35(id))
        set(__c1 char(id __i13))
        set(__n10 code(__c1))
        set(__e24 "")
        if(_37eq(__c1 "-") AND NOT( _37eq(id "-")))
          set(__e27 "")
          if(_37eq(__i13 0))
            set(__e27 __x89)
          else()
            set(__e27 "_")
          endif()
          set(__e24 "${__e27}")
        else()
          set(__e25 "")
          if(valid_code63(__n10))
            set(__e25 __c1)
          else()
            set(__e26 "")
            if(_37eq(__i13 0))
              set(__e26 cat(__x89 __n10))
            else()
              set(__e26 __n10)
            endif()
            set(__e25 "${__e26}")
          endif()
          set(__e24 "${__e25}")
        endif()
        set(__c11 "${__e24}")
        set(__id11 cat(__id11 __c11))
        set(__i13 __i13 + 1)
      endwhile()
      if(raw63)
        return(PROPAGATE __id11)
      else()
        if(reserved63(__id11))
          return(PROPAGATE cat(__x89 __id11))
        else()
          return(PROPAGATE __id11)
        endif()
      endif()
    endif()
  endif()
endfunction()
function(valid_id63 x)
  return(PROPAGATE some63(x) AND _37eq(x compile_id(x)))
endfunction()
set(__names )
function(unique x)
  set(__x90 compile_id(x))
  if(has63(__names __x90))
    set(__i14 __names[__x90])
    set(__names[__x90] __names[__x90] + 1)
    return(PROPAGATE unique(cat(__x90 __i14)))
  else()
    set(__names[__x90] 1)
    return(PROPAGATE cat("__" __x90))
  endif()
endfunction()
function(key k)
  if(_37eq(has(setenv("target" toplevel ON) "value") "py"))
    return(PROPAGATE compile(k))
  else()
    if(string_literal63(k))
      set(__i15 inner(k))
      if(_37eq(has(setenv("target" toplevel ON) "value") "cmake"))
        set(__e28 "")
        if(valid_id63(__i15))
          set(__e28 __i15)
        else()
          set(__e28 k)
        endif()
        return(PROPAGATE screamcase("${__e28}"))
      else()
        if(valid_id63(__i15))
          return(PROPAGATE __i15)
        else()
          return(PROPAGATE cat("[" k "]"))
        endif()
      endif()
    else()
      return(PROPAGATE cat("[" compile(k) "]"))
    endif()
  endif()
endfunction()
function(mapo f t)
  set(__o8 )
  set(____o9 t)
  set(__k13 "")
  for (__k13 in ____o9) {
    set(__v8 ____o9[__k13])
    set(__e29 "")
    if(numeric63(__k13))
      set(__e29 parseInt(__k13))
    else()
      set(__e29 __k13)
    endif()
    set(__k14 "${__e29}")
    set(__x91 f(__v8))
    if(is63(__x91))
      add(__o8 literal(__k14))
      add(__o8 __x91)
    endif()
  }
  return(PROPAGATE __o8)
endfunction()
set(____x93 object())
set(____x94 object())
set(____x94.js "!")
set(____x94.lua "not")
set(____x94.py "not")
set(____x94.cmake "NOT")
set(____x93["%not"] ____x94)
set(____x93["%unm"] "-")
set(____x95 object())
set(____x95["%mul"] "*")
set(____x95["%div"] "/")
set(____x95["%idiv"] "//")
set(____x95["%mod"] "%")
set(____x96 object())
set(____x97 object())
set(____x97.js "+")
set(____x97.lua "..")
set(____x97.py "+")
set(____x96["%cat"] ____x97)
set(____x98 object())
set(____x98["%add"] "+")
set(____x98["%sub"] "-")
set(____x99 object())
set(____x100 object())
set(____x100.cmake "LESS")
set(____x100.all "<")
set(____x99["%lt"] ____x100)
set(____x101 object())
set(____x101.cmake "GREATER")
set(____x101.all ">")
set(____x99["%gt"] ____x101)
set(____x102 object())
set(____x102.cmake "LESS_EQUAL")
set(____x102.all "<=")
set(____x99["%le"] ____x102)
set(____x103 object())
set(____x103.cmake "GREATER_EQUAL")
set(____x103.all ">=")
set(____x99["%ge"] ____x103)
set(____x104 object())
set(____x105 object())
set(____x105.js "===")
set(____x105.lua "==")
set(____x105.py "==")
set(____x104["%eq"] ____x105)
set(____x106 object())
set(____x107 object())
set(____x107.py "in")
set(____x106["%in"] ____x107)
set(____x108 object())
set(____x108.py "is")
set(____x106["%is"] ____x108)
set(____x109 object())
set(____x110 object())
set(____x110.js "&&")
set(____x110.lua "and")
set(____x110.py "and")
set(____x110.cmake "AND")
set(____x109["%and"] ____x110)
set(____x111 object())
set(____x112 object())
set(____x112.js "||")
set(____x112.lua "or")
set(____x112.py "or")
set(____x112.cmake "OR")
set(____x111["%or"] ____x112)
set(infix ____x93 ____x95 ____x96 ____x98 ____x99 ____x104 ____x106 ____x109 ____x111)
function(unary63 form)
  return(PROPAGATE two63(form) AND in63(hd(form) "%not" "%unm"))
endfunction()
function(index k)
  return(PROPAGATE k)
endfunction()
function(precedence form)
  if(NOT( atom63(form) OR unary63(form)))
    if(atom63(hd(form)))
      set(____o10 infix)
      set(__k15 "")
      for (__k15 in ____o10) {
        set(__v9 ____o10[__k15])
        set(__e30 "")
        if(numeric63(__k15))
          set(__e30 parseInt(__k15))
        else()
          set(__e30 __k15)
        endif()
        set(__k16 "${__e30}")
        if(has63(__v9 hd(form)))
          return(PROPAGATE index(__k16))
        endif()
      }
    endif()
  endif()
  return(PROPAGATE 0)
endfunction()
function(getop op)
  if(string63(op))
    function(__f6 level)
      set(__x114 has(level op))
      if(_37eq(__x114 ON))
        return(PROPAGATE op)
      else()
        if(string63(__x114))
          return(PROPAGATE __x114)
        else()
          if(is63(__x114))
            return(PROPAGATE has(__x114 has(setenv("target" toplevel ON) "value")) OR has(__x114 "all"))
          endif()
        endif()
      endif()
    endfunction()
    return(PROPAGATE find(__f6 infix))
  endif()
endfunction()
function(infix63 x)
  return(PROPAGATE is63(getop(x)))
endfunction()
function(infix_operator63 x)
  return(PROPAGATE NOT atom63(x) AND infix63(hd(x)))
endfunction()
function(compile_args args default63)
  set(__s1 "(")
  set(__c2 "")
  set(____x115 args)
  set(____i18 0)
  while(____i18 LESS _35(____x115))
    set(__x116 ____x115[____i18])
    set(__s1 cat(__s1 __c2 compile(__x116)))
    if((_37eq(has(setenv("target" toplevel ON) "value") "py") OR _37eq(has(setenv("target" toplevel ON) "value") "cmake")) AND (default63 AND (NOT id_literal63(__x116) AND NOT( _37eq(__x116 "...")))))
      set(__e31 "")
      if(_37eq(has(setenv("target" toplevel ON) "value") "cmake"))
        set(__e31 "")
      else()
        set(__e31 "=None")
      endif()
      set(__s1 cat(__s1 "${__e31}"))
    endif()
    set(__e32 "")
    if(_37eq(has(setenv("target" toplevel ON) "value") "cmake"))
      set(__e32 " ")
    else()
      set(__e32 ", ")
    endif()
    set(__c2 "${__e32}")
    set(____i18 ____i18 + 1)
  endwhile()
  return(PROPAGATE cat(__s1 ")"))
endfunction()
function(escape_newlines s)
  if(nil63(search(s "\n")) AND nil63(search(s "\r")))
    return(PROPAGATE s)
  else()
    set(__s11 "")
    set(__i19 0)
    while(__i19 LESS _35(s))
      set(__c3 char(s __i19))
      set(__e33 "")
      if(_37eq(__c3 "\n"))
        set(__e33 "\\n")
      else()
        set(__e34 "")
        if(_37eq(__c3 "\r"))
          set(__e34 "\\r")
        else()
          set(__e34 __c3)
        endif()
        set(__e33 "${__e34}")
      endif()
      set(__s11 cat(__s11 "${__e33}"))
      set(__i19 __i19 + 1)
    endwhile()
    return(PROPAGATE __s11)
  endif()
endfunction()
function(compile_nil)
  if(_37eq(has(setenv("target" toplevel ON) "value") "py"))
    return(PROPAGATE "None")
  else()
    if(_37eq(has(setenv("target" toplevel ON) "value") "cmake"))
      return(PROPAGATE "\"\"")
    else()
      if(_37eq(has(setenv("target" toplevel ON) "value") "lua"))
        return(PROPAGATE "nil")
      else()
        return(PROPAGATE "undefined")
      endif()
    endif()
  endif()
endfunction()
function(compile_boolean x)
  if(_37eq(has(setenv("target" toplevel ON) "value") "py"))
    if(x)
      return(PROPAGATE "True")
    else()
      return(PROPAGATE "False")
    endif()
  else()
    if(_37eq(has(setenv("target" toplevel ON) "value") "cmake"))
      if(x)
        return(PROPAGATE "ON")
      else()
        return(PROPAGATE "OFF")
      endif()
    else()
      if(x)
        return(PROPAGATE "true")
      else()
        return(PROPAGATE "false")
      endif()
    endif()
  endif()
endfunction()
function(triple_quoted63 x)
  return(PROPAGATE string_literal63(x) AND (string_literal63(inner(x)) AND string_literal63(inner(inner(x)))))
endfunction()
function(un_triple_quote x)
  return(PROPAGATE escape(inner(inner(inner(x)))))
endfunction()
function(compile_string x)
  if(triple_quoted63(x))
    if(_37eq(has(setenv("target" toplevel ON) "value") "py"))
      return(PROPAGATE x)
    else()
      return(PROPAGATE escape_newlines(un_triple_quote(x)))
    endif()
  else()
    return(PROPAGATE escape_newlines(x))
  endif()
endfunction()
function(compile_rest)
  if(_37eq(has(setenv("target" toplevel ON) "value") "py"))
    return(PROPAGATE "*_args, **_keys")
  else()
    if(_37eq(has(setenv("target" toplevel ON) "value") "js"))
      return(PROPAGATE cat("..." compile("*args")))
    else()
      return(PROPAGATE "...")
    endif()
  endif()
endfunction()
function(compile_atom x raw63)
  if(_37eq(x "nil"))
    return(PROPAGATE compile_nil())
  else()
    if(_37eq(x "..."))
      return(PROPAGATE compile_rest())
    else()
      if(id_literal63(x))
        return(PROPAGATE inner(x))
      else()
        if(string_literal63(x))
          return(PROPAGATE compile_string(x))
        else()
          if(string63(x))
            return(PROPAGATE compile_id(x raw63))
          else()
            if(boolean63(x))
              return(PROPAGATE compile_boolean(x))
            else()
              if(nan63(x))
                return(PROPAGATE "nan")
              else()
                if(_37eq(x inf))
                  return(PROPAGATE "inf")
                else()
                  if(_37eq(x _inf))
                    return(PROPAGATE "-inf")
                  else()
                    if(number63(x))
                      return(PROPAGATE cat(x ""))
                    else()
                      error(cat("Cannot compile atom: " str(x)))
                    endif()
                  endif()
                endif()
              endif()
            endif()
          endif()
        endif()
      endif()
    endif()
  endif()
endfunction()
function(terminator stmt63)
  if(NOT stmt63)
    return(PROPAGATE "")
  else()
    if(_37eq(has(setenv("target" toplevel ON) "value") "js"))
      return(PROPAGATE ";\n")
    else()
      return(PROPAGATE "\n")
    endif()
  endif()
endfunction()
function(compile_special form stmt63)
  set(____id111 form)
  set(__x117 has(____id111 0))
  set(__args4 cut(____id111 1))
  set(____id12 getenv(__x117))
  set(__special has(____id12 "special"))
  set(__stmt has(____id12 "stmt"))
  set(__self_tr63 has(____id12 "tr"))
  set(__e35 "")
  if(stmt63 AND NOT __stmt)
    set(__e35 indentation())
  else()
    set(__e35 "")
  endif()
  set(__p "${__e35}")
  set(__tr terminator(stmt63 AND NOT __self_tr63))
  return(PROPAGATE cat(__p apply(__special __args4) __tr))
endfunction()
function(parenthesize_call63 x)
  return(PROPAGATE NOT atom63(x) AND _37eq(hd(x) "%function") OR precedence(x) GREATER 0)
endfunction()
function(method_call63 form)
  set(__e36 "")
  if(list63(form))
    set(__e36 hd(form))
  else()
    set(__e36 form)
  endif()
  set(__x118 "${__e36}")
  return(PROPAGATE string63(__x118) AND (_35(__x118 1) GREATER 1 AND _37eq(char(__x118 0) ".")))
endfunction()
function(compile_call form)
  set(__f1 hd(form))
  set(__f11 compile_name(__f1))
  set(__args5 stash42(tl(form)))
  set(__e37 "")
  if(method_call63(hd(__args5)))
    set(__e37 mapcat(compile __args5 ""))
  else()
    set(__e37 compile_args(__args5))
  endif()
  set(__args6 "${__e37}")
  if(parenthesize_call63(__f1))
    return(PROPAGATE cat("(" __f11 ")" __args6))
  else()
    return(PROPAGATE cat(__f11 __args6))
  endif()
endfunction()
function(op_delims parent child ...)
  set(____r81 unstash(...))
  set(__parent destash33(parent ____r81))
  set(__child destash33(child ____r81))
  set(____id13 ____r81)
  set(__right has(____id13 "right"))
  set(__e38 "")
  if(__right)
    set(__e38 _6261)
  else()
    set(__e38 _62)
  endif()
  if("${__e38}"(precedence(__child) precedence(__parent)))
    return(PROPAGATE "(" ")")
  else()
    return(PROPAGATE "" "")
  endif()
endfunction()
function(compile_infix form)
  set(____id14 form)
  set(__op has(____id14 0))
  set(____id15 cut(____id14 1))
  set(__a1 has(____id15 0))
  set(__b2 has(____id15 1))
  set(____id16 op_delims(form __a1))
  set(__ao has(____id16 0))
  set(__ac has(____id16 1))
  set(____id17 op_delims(form __b2 right ON))
  set(__bo has(____id17 0))
  set(__bc has(____id17 1))
  set(__a2 compile(__a1))
  set(__b3 compile(__b2))
  set(__op1 getop(__op))
  if(unary63(form))
    return(PROPAGATE cat(__op1 __ao " " __a2 __ac))
  else()
    return(PROPAGATE cat(__ao __a2 __ac " " __op1 " " __bo __b3 __bc))
  endif()
endfunction()
function(compile_body body)
  set(setenv("indent-level" toplevel ON).value has(setenv("indent-level" toplevel ON) "value") + 1)
  set(____x122 compile(body stmt ON))
  set(setenv("indent-level" toplevel ON).value has(setenv("indent-level" toplevel ON) "value") - 1)
  set(__s2 ____x122)
  if(_37eq(has(setenv("target" toplevel ON) "value") "py") AND none63(__s2))
    set(setenv("indent-level" toplevel ON).value has(setenv("indent-level" toplevel ON) "value") + 1)
    set(____x123 cat(indentation() "pass\n"))
    set(setenv("indent-level" toplevel ON).value has(setenv("indent-level" toplevel ON) "value") - 1)
    return(PROPAGATE ____x123)
  else()
    return(PROPAGATE __s2)
  endif()
endfunction()
function(compile_function args body ...)
  set(____r84 unstash(...))
  set(__args7 destash33(args ____r84))
  set(__body4 destash33(body ____r84))
  set(____id18 ____r84)
  set(__name3 has(____id18 "name"))
  set(__prefix has(____id18 "prefix"))
  set(__async has(____id18 "async"))
  set(__e39 "")
  if(__name3)
    set(__e39 compile_name(__name3))
  else()
    set(__e39 "")
  endif()
  set(__id19 "${__e39}")
  set(__e40 "")
  if(has(__args7 "rest"))
    set(__e40 join(__args7 "..."))
  else()
    set(__e40 __args7)
  endif()
  set(__args12 "${__e40}")
  set(__e41 "")
  if(_37eq(has(setenv("target" toplevel ON) "value") "cmake"))
    set(__e41 compile_args(join("%compile" __id19 __args12) ON))
  else()
    set(__e41 compile_args(__args12 ON))
  endif()
  set(__args8 "${__e41}")
  set(__body5 compile_body(__body4))
  set(__ind indentation())
  set(__e42 "")
  if(__prefix)
    set(__e42 cat(__prefix " "))
  else()
    set(__e42 "")
  endif()
  set(__p1 "${__e42}")
  set(__e43 "")
  if(_37eq(has(setenv("target" toplevel ON) "value") "js"))
    set(__e43 "")
  else()
    set(__e44 "")
    if(_37eq(has(setenv("target" toplevel ON) "value") "cmake"))
      set(__e44 "endfunction()")
    else()
      set(__e44 "end")
    endif()
    set(__e43 "${__e44}")
  endif()
  set(__tr1 "${__e43}")
  set(__e45 "")
  if(__async AND NOT( _37eq(has(setenv("target" toplevel ON) "value") "lua")))
    set(__e45 "async ")
  else()
    set(__e45 "")
  endif()
  set(__a3 "${__e45}")
  if(__name3)
    set(__tr1 cat(__tr1 "\n"))
  endif()
  if(_37eq(has(setenv("target" toplevel ON) "value") "js"))
    return(PROPAGATE cat(__a3 "function " __id19 __args8 " {\n" __body5 __ind "}" __tr1))
  else()
    if(_37eq(has(setenv("target" toplevel ON) "value") "py"))
      set(__e46 "")
      if(none63(__ind))
        set(__e46 "\n")
      else()
        set(__e46 "")
      endif()
      set(__ws "${__e46}")
      return(PROPAGATE cat(__a3 "def " __id19 __args8 ":\n" __body5 __ws))
    else()
      if(_37eq(has(setenv("target" toplevel ON) "value") "cmake"))
        return(PROPAGATE cat(__a3 "function" __args8 "\n" __body5 __ind __tr1))
      else()
        return(PROPAGATE cat(__p1 "function " __id19 __args8 "\n" __body5 __ind __tr1))
      endif()
    endif()
  endif()
endfunction()
function(can_return63 form)
  return(PROPAGATE is63(form) AND (atom63(form) OR NOT( _37eq(hd(form) "%return")) AND NOT statement63(hd(form))))
endfunction()
function(compile form raw63 ...)
  set(____r86 unstash(...))
  set(__form1 destash33(form ____r86))
  set(__raw63 destash33(raw63 ____r86))
  set(____id20 ____r86)
  set(__stmt1 has(____id20 "stmt"))
  if(nil63(__form1))
    return(PROPAGATE "")
  else()
    if(special_form63(__form1))
      return(PROPAGATE compile_special(__form1 __stmt1))
    else()
      set(__tr2 terminator(__stmt1))
      set(__e47 "")
      if(__stmt1)
        set(__e47 indentation())
      else()
        set(__e47 "")
      endif()
      set(__ind1 "${__e47}")
      set(__e48 "")
      if(atom63(__form1))
        set(__e48 compile_atom(__form1 __raw63))
      else()
        set(__e49 "")
        if(infix63(hd(__form1)))
          set(__e49 compile_infix(__form1))
        else()
          set(__e49 compile_call(__form1))
        endif()
        set(__e48 "${__e49}")
      endif()
      set(__form2 "${__e48}")
      return(PROPAGATE cat(__ind1 __form2 __tr2))
    endif()
  endif()
endfunction()
function(lower_statement form tail63)
  set(__hoist )
  set(__e lower(form __hoist ON tail63))
  set(__e50 "")
  if(some63(__hoist) AND is63(__e))
    set(__e50 join("%do" __hoist __e))
  else()
    set(__e51 "")
    if(is63(__e))
      set(__e51 __e)
    else()
      set(__e52 "")
      if(_35(__hoist) GREATER 1)
        set(__e52 join("%do" __hoist))
      else()
        set(__e52 hd(__hoist))
      endif()
      set(__e51 "${__e52}")
    endif()
    set(__e50 "${__e51}")
  endif()
  return(PROPAGATE either("${__e50}" "%do"))
endfunction()
function(lower_body body tail63)
  return(PROPAGATE lower_statement(join("%do" body) tail63))
endfunction()
function(literal63 form)
  return(PROPAGATE atom63(form) OR (_37eq(hd(form) "%array") OR (_37eq(hd(form) "%object") OR (_37eq(hd(form) "%list") OR (_37eq(hd(form) "%ptr") OR (_37eq(hd(form) "%id") OR (_37eq(hd(form) "%ref") OR _37eq(hd(form) ","))))))))
endfunction()
function(standalone63 form)
  return(PROPAGATE NOT( _37eq(has(setenv("target" toplevel ON) "value") "lua")) AND string_literal63(form) OR (NOT atom63(form) AND (NOT infix63(hd(form)) AND (NOT literal63(form) AND NOT( _37eq("%get" hd(form))))) OR id_literal63(form)))
endfunction()
function(lower_do args hoist stmt63 tail63)
  set(____x134 almost(args))
  set(____i20 0)
  while(____i20 LESS _35(____x134))
    set(__x135 ____x134[____i20])
    set(____y lower(__x135 hoist stmt63))
    if(yes(____y))
      set(__e1 ____y)
      if(standalone63(__e1))
        add(hoist __e1)
      endif()
    endif()
    set(____i20 ____i20 + 1)
  endwhile()
  set(__e2 lower(last(args) hoist stmt63 tail63))
  if(tail63 AND can_return63(__e2))
    return(PROPAGATE "%return" __e2)
  else()
    return(PROPAGATE __e2)
  endif()
endfunction()
function(lower_set args hoist stmt63 tail63)
  set(____id21 args)
  set(__lh has(____id21 0))
  set(__rh has(____id21 1))
  set(__lh1 lower(__lh hoist))
  set(__rh1 lower(__rh hoist))
  add(hoist "%set" __lh1 __rh1)
  if(NOT( stmt63 AND NOT tail63 OR OFF))
    return(PROPAGATE __lh1)
  endif()
endfunction()
function(lower_if args hoist stmt63 tail63)
  set(____id22 args)
  set(__cond has(____id22 0))
  set(__then has(____id22 1))
  set(__else has(____id22 2))
  if(stmt63)
    set(__e54 "")
    if(is63(__else))
      set(__e54 lower_body(__else tail63))
    endif()
    return(PROPAGATE add(hoist join("%if" lower(__cond hoist) lower_body(__then tail63) "${__e54}")))
  else()
    set(__e3 unique("e"))
    add(hoist "%local" __e3 "nil")
    set(__e53 "")
    if(is63(__else))
      set(__e53 lower("%set" __e3 __else))
    endif()
    add(hoist join("%if" lower(__cond hoist) lower("%set" __e3 __then) "${__e53}"))
    if(_37eq(has(setenv("target" toplevel ON) "value") "cmake"))
      return(PROPAGATE "%id" __e3)
    else()
      return(PROPAGATE __e3)
    endif()
  endif()
endfunction()
function(lower_short x args hoist)
  set(____id23 args)
  set(__a4 has(____id23 0))
  set(__b4 has(____id23 1))
  set(__hoist1 )
  set(__b11 lower(__b4 __hoist1))
  if(some63(__hoist1))
    set(__id24 unique("id"))
    set(__e55 "")
    if(_37eq(x "%and"))
      set(__e55 "%if" __id24 __b4 __id24)
    else()
      set(__e55 "%if" __id24 __id24 __b4)
    endif()
    return(PROPAGATE lower("%do" "%local" __id24 __a4 "${__e55}" hoist))
  else()
    return(PROPAGATE x lower(__a4 hoist) __b11)
  endif()
endfunction()
function(lower_try args hoist tail63)
  return(PROPAGATE add(hoist "%try" lower_body(args tail63)))
endfunction()
function(lower_while args hoist)
  set(____id25 args)
  set(__c4 has(____id25 0))
  set(__body6 cut(____id25 1))
  set(__pre1 )
  set(__c5 lower(__c4 __pre1))
  set(__e56 "")
  if(none63(__pre1))
    set(__e56 "%while" __c5 lower_body(__body6))
  else()
    set(__e56 "%while" ON join("%do" __pre1 "%if" "%not" __c5 "%break" lower_body(__body6)))
  endif()
  return(PROPAGATE add(hoist "${__e56}"))
endfunction()
function(lower_for args hoist)
  set(____id26 args)
  set(__h has(____id26 0))
  set(__k17 has(____id26 1))
  set(__body7 cut(____id26 2))
  return(PROPAGATE add(hoist join("%for" lower(__h hoist) __k17 lower_body(__body7) props(__body7))))
endfunction()
function(lower_with args hoist stmt63 tail63)
  set(____id27 args)
  set(__h1 has(____id27 0))
  set(__body8 cut(____id27 1))
  if(stmt63 AND NOT tail63)
    return(PROPAGATE add(hoist join("%with" lower(__h1 hoist) lower_body(__body8 tail63) props(__body8))))
  else()
    set(__e4 unique("e"))
    add(hoist "%local" __e4)
    add(hoist join("%with" lower(__h1 hoist) lower("%set" __e4 join("%do" __body8)) props(__body8)))
    return(PROPAGATE __e4)
  endif()
endfunction()
function(lower_block kind args hoist stmt63 tail63)
  set(____id28 args)
  set(__name4 has(____id28 0))
  set(__h2 has(____id28 1))
  set(__body9 cut(____id28 2))
  return(PROPAGATE add(hoist kind __name4 lower(__h2 hoist) lower_body(__body9 tail63)))
endfunction()
function(lower_from args hoist stmt63 tail63)
  set(____id29 args)
  set(__name5 has(____id29 0))
  set(__import_ has(____id29 1))
  set(__id30 has(____id29 2))
  set(__as_ has(____id29 3))
  set(__alias has(____id29 4))
  add(hoist join("from" args))
  return(PROPAGATE __alias OR __id30)
endfunction()
function(lower_import __x169 hoist stmt63 tail63)
  set(____id31 __x169)
  set(__name6 has(____id31 0))
  set(__alias1 cut(____id31 1))
  set(__e57 "")
  if(_37eq(hd(__alias1) "as"))
    set(__e57 __alias1[1])
  else()
    set(__e57 hd(__alias1))
  endif()
  set(__as "${__e57}")
  set(__id32 __as OR __name6)
  add(hoist join("import" __name6 __alias1))
  if(NOT stmt63)
    return(PROPAGATE __id32)
  endif()
endfunction()
function(lower_function args hoist)
  if(_37eq(has(setenv("target" toplevel ON) "value") "py") OR _37eq(has(setenv("target" toplevel ON) "value") "cmake"))
    set(__f2 unique("f"))
    return(PROPAGATE lower("%do" join("%local-function" __f2 args) __f2 hoist))
  else()
    set(____id33 args)
    set(__a5 has(____id33 0))
    set(__body10 cut(____id33 1))
    return(PROPAGATE join("%function" __a5 lower_body(__body10 ON) props(__body10)))
  endif()
endfunction()
function(lower_definition kind args hoist)
  set(____id34 args)
  set(__name7 has(____id34 0))
  set(__args9 has(____id34 1))
  set(__body11 cut(____id34 2))
  return(PROPAGATE add(hoist join(kind __name7 __args9 lower_body(__body11 ON) props(__body11))))
endfunction()
function(ref63 x)
  return(PROPAGATE list63(x) AND hd63(x "%ref"))
endfunction()
function(id63 x)
  return(PROPAGATE list63(x) AND hd63(x "%id"))
endfunction()
function(ptr63 x)
  return(PROPAGATE list63(x) AND hd63(x "%ptr"))
endfunction()
function(reference63 x)
  return(PROPAGATE ref63(x) OR (id63(x) OR ptr63(x)))
endfunction()
function(ptr_name x)
  return(PROPAGATE x[1])
endfunction()
function(ptr_decay x)
  set(__x177 ptr_name(x))
  if(id63(__x177))
    return(PROPAGATE __x177)
  else()
    if(ref63(__x177))
      return(PROPAGATE __x177)
    else()
      return(PROPAGATE "%id" __x177)
    endif()
  endif()
endfunction()
function(ptr_decay x)
  return(PROPAGATE x)
endfunction()
function(lower_invoke form hoist)
  set(__ptr "")
  function(lower_ptr x)
    if(ptr63(x))
      set(__ptr ptr_decay(x))
      set(x ptr_name(x))
    endif()
    return(PROPAGATE x)
  endfunction()
  set(__form3 map(lower_ptr form))
  if(is63(__ptr) AND NOT literal63(__form3))
    add(hoist __form3)
  else()
    set(__ptr __form3)
  endif()
  return(PROPAGATE __ptr)
endfunction()
function(lower_call form hoist)
  function(__f7 x)
    return(PROPAGATE lower(x hoist))
  endfunction()
  set(__form4 map(__f7 form))
  if(some63(__form4))
    return(PROPAGATE lower_invoke(__form4 hoist))
  endif()
endfunction()
function(pairwise63 form)
  return(PROPAGATE in63(hd(form) "%lt" "%le" "%eq" "%ge" "%gt"))
endfunction()
function(lower_pairwise form)
  if(pairwise63(form))
    set(__e5 )
    set(____id35 form)
    set(__x180 has(____id35 0))
    set(__args10 cut(____id35 1))
    function(__f8 a b)
      add(__e5 __x180 a b)
      return(PROPAGATE a)
    endfunction()
    reduce(__f8 __args10)
    return(PROPAGATE join("%and" reverse(__e5)))
  else()
    return(PROPAGATE form)
  endif()
endfunction()
function(lower_infix63 form)
  return(PROPAGATE infix63(hd(form)) AND _35(form) GREATER 3)
endfunction()
function(lower_infix form hoist)
  set(__form5 lower_pairwise(form))
  set(____id36 __form5)
  set(__x183 has(____id36 0))
  set(__args111 cut(____id36 1))
  function(__f9 a b)
    return(PROPAGATE __x183 b a)
  endfunction()
  return(PROPAGATE lower(reduce(__f9 reverse(__args111)) hoist))
endfunction()
function(lower_special form hoist)
  set(__e6 lower_call(form hoist))
  if(__e6)
    return(PROPAGATE add(hoist __e6))
  endif()
endfunction()
function(lower form hoist stmt63 tail63)
  if(atom63(form))
    return(PROPAGATE form)
  else()
    if(empty63(form))
      return(PROPAGATE "%array")
    else()
      if(nil63(hoist))
        return(PROPAGATE lower_statement(form))
      else()
        if(lower_infix63(form))
          return(PROPAGATE lower_infix(form hoist))
        else()
          set(____id37 form)
          set(__x186 has(____id37 0))
          set(__args121 cut(____id37 1))
          if(_37eq(__x186 "%do"))
            return(PROPAGATE lower_do(__args121 hoist stmt63 tail63))
          else()
            if(_37eq(__x186 "%call"))
              return(PROPAGATE lower(__args121 hoist stmt63 tail63))
            else()
              if(_37eq(__x186 "%set"))
                return(PROPAGATE lower_set(__args121 hoist stmt63 tail63))
              else()
                if(_37eq(__x186 "%if"))
                  return(PROPAGATE lower_if(__args121 hoist stmt63 tail63))
                else()
                  if(_37eq(__x186 "%try"))
                    return(PROPAGATE lower_try(__args121 hoist tail63))
                  else()
                    if(_37eq(__x186 "%while"))
                      return(PROPAGATE lower_while(__args121 hoist))
                    else()
                      if(_37eq(__x186 "%for"))
                        return(PROPAGATE lower_for(__args121 hoist))
                      else()
                        if(_37eq(__x186 "%with"))
                          return(PROPAGATE lower_with(__args121 hoist stmt63 tail63))
                        else()
                          if(_37eq(__x186 "%block"))
                            return(PROPAGATE lower_block("%block" __args121 hoist stmt63 tail63))
                          else()
                            if(_37eq(__x186 "%cases"))
                              return(PROPAGATE lower_cases(__args121 hoist stmt63 tail63))
                            else()
                              if(_37eq(__x186 "import"))
                                return(PROPAGATE lower_import(__args121 hoist stmt63 tail63))
                              else()
                                if(_37eq(__x186 "from"))
                                  return(PROPAGATE lower_from(__args121 hoist stmt63 tail63))
                                else()
                                  if(_37eq(__x186 "%function"))
                                    return(PROPAGATE lower_function(__args121 hoist))
                                  else()
                                    if(_37eq(__x186 "%local-function") OR _37eq(__x186 "%global-function"))
                                      return(PROPAGATE lower_definition(__x186 __args121 hoist))
                                    else()
                                      if(in63(__x186 "%and" "%or"))
                                        return(PROPAGATE lower_short(__x186 __args121 hoist))
                                      else()
                                        if(statement63(__x186))
                                          return(PROPAGATE lower_special(form hoist))
                                        else()
                                          return(PROPAGATE lower_call(form hoist))
                                        endif()
                                      endif()
                                    endif()
                                  endif()
                                endif()
                              endif()
                            endif()
                          endif()
                        endif()
                      endif()
                    endif()
                  endif()
                endif()
              endif()
            endif()
          endif()
        endif()
      endif()
    endif()
  endif()
endfunction()
function(expand form)
  return(PROPAGATE lower(macroexpand(form)))
endfunction()
function(eval_result globals locals)
  return(PROPAGATE lumen_result)
endfunction()
function(eval form globals locals)
  set(____prev has(setenv("target" toplevel ON) "value"))
  set(setenv("target" toplevel ON).value "cmake")
  function(__f10)
    try:
      set(____prev1 has(setenv("indent-level" toplevel ON) "value"))
      set(setenv("indent-level" toplevel ON).value 0)
      function(__f111)
        try:
          return(PROPAGATE ON compile(expand("%set" "lumen-result" form)))
        except:
          return(PROPAGATE OFF e)
      endfunction()
      set(____id39 __f111())
      set(____ok3 has(____id39 0))
      set(____x191 has(____id39 1))
      set(setenv("indent-level" toplevel ON).value ____prev1)
      set(__e58 "")
      if(____ok3)
        set(__e58 ____x191)
      else()
        error(____x191)
        set(__e58 "")
      endif()
      return(PROPAGATE ON "${__e58}")
    except:
      return(PROPAGATE OFF e)
  endfunction()
  set(____id38 __f10())
  set(____ok2 has(____id38 0))
  set(____x188 has(____id38 1))
  set(setenv("target" toplevel ON).value ____prev)
  set(__e59 "")
  if(____ok2)
    set(__e59 ____x188)
  else()
    error(____x188)
    set(__e59 "")
  endif()
  set(__code "${__e59}")
  run(__code globals locals)
  return(PROPAGATE eval_result(globals locals))
endfunction()
function(immediate_call63 x)
  return(PROPAGATE NOT atom63(x) AND (NOT atom63(hd(x)) AND _37eq(hd(hd(x)) "%function")))
endfunction()
function(___37do__special ...)
  set(__forms1 unstash(...))
  set(__s3 "")
  set(____x196 __forms1)
  set(____i21 0)
  while(____i21 LESS _35(____x196))
    set(__x197 ____x196[____i21])
    if(_37eq(has(setenv("target" toplevel ON) "value") "lua") AND (immediate_call63(__x197) AND _37eq("\n" char(__s3 edge(__s3)))))
      set(__s3 cat(clip(__s3 0 edge(__s3)) ";\n"))
    endif()
    set(__s3 cat(__s3 compile(__x197 stmt ON)))
    if(NOT atom63(__x197))
      if(_37eq(hd(__x197) "%return") OR _37eq(hd(__x197) "%break"))
        break()
      endif()
    endif()
    set(____i21 ____i21 + 1)
  endwhile()
  return(PROPAGATE __s3)
endfunction()
setenv("%do" special ___37do__special stmt ON tr ON)
function(___37cmake_block__special body)
  set(__ind2 indentation())
  set(__s4 "")
  set(__s4 cat(__s4 __ind2 "block(SCOPE_FOR VARIABLES)\n"))
  set(__s4 cat(__s4 compile_body(body)))
  set(__s4 cat(__s4 __ind2 "endblock()\n"))
  return(PROPAGATE __s4)
endfunction()
setenv("%cmake-block" special ___37cmake_block__special stmt ON tr ON)
function(___37if__special cond cons alt)
  set(__cond1 compile(cond))
  set(__cons compile_body(cons))
  set(__e60 "")
  if(alt)
    set(__e60 compile_body(alt))
  endif()
  set(__alt "${__e60}")
  set(__ind3 indentation())
  set(__s5 "")
  if(_37eq(has(setenv("target" toplevel ON) "value") "js"))
    set(__s5 cat(__s5 __ind3 "if (" __cond1 ") {\n" __cons __ind3 "}"))
  else()
    if(_37eq(has(setenv("target" toplevel ON) "value") "py"))
      set(__s5 cat(__s5 __ind3 "if " __cond1 ":\n" __cons))
    else()
      if(_37eq(has(setenv("target" toplevel ON) "value") "cmake"))
        set(__s5 cat(__s5 __ind3 "if(" __cond1 ")\n" __cons))
      else()
        set(__s5 cat(__s5 __ind3 "if " __cond1 " then\n" __cons))
      endif()
    endif()
  endif()
  if(__alt AND _37eq(has(setenv("target" toplevel ON) "value") "js"))
    set(__s5 cat(__s5 " else {\n" __alt __ind3 "}"))
  else()
    if(__alt AND _37eq(has(setenv("target" toplevel ON) "value") "py"))
      set(__s5 cat(__s5 __ind3 "else:\n" __alt))
    else()
      if(__alt AND _37eq(has(setenv("target" toplevel ON) "value") "cmake"))
        set(__s5 cat(__s5 __ind3 "else()\n" __alt))
      else()
        if(__alt)
          set(__s5 cat(__s5 __ind3 "else\n" __alt))
        endif()
      endif()
    endif()
  endif()
  if(_37eq(has(setenv("target" toplevel ON) "value") "lua"))
    return(PROPAGATE cat(__s5 __ind3 "end\n"))
  else()
    if(_37eq(has(setenv("target" toplevel ON) "value") "js"))
      return(PROPAGATE cat(__s5 "\n"))
    else()
      if(_37eq(has(setenv("target" toplevel ON) "value") "cmake"))
        return(PROPAGATE cat(__s5 __ind3 "endif()\n"))
      else()
        return(PROPAGATE __s5)
      endif()
    endif()
  endif()
endfunction()
setenv("%if" special ___37if__special stmt ON tr ON)
function(___37while__special cond form)
  set(__cond2 compile(cond))
  set(__body12 compile_body(form))
  set(__ind4 indentation())
  if(_37eq(has(setenv("target" toplevel ON) "value") "js"))
    return(PROPAGATE cat(__ind4 "while (" __cond2 ") {\n" __body12 __ind4 "}\n"))
  else()
    if(_37eq(has(setenv("target" toplevel ON) "value") "py"))
      return(PROPAGATE cat(__ind4 "while " __cond2 ":\n" __body12))
    else()
      if(_37eq(has(setenv("target" toplevel ON) "value") "cmake"))
        return(PROPAGATE cat(__ind4 "while(" __cond2 ")\n" __body12 __ind4 "endwhile()\n"))
      else()
        return(PROPAGATE cat(__ind4 "while " __cond2 " do\n" __body12 __ind4 "end\n"))
      endif()
    endif()
  endif()
endfunction()
setenv("%while" special ___37while__special stmt ON tr ON)
function(___37for__special t k form ...)
  set(____r137 unstash(...))
  set(__t destash33(t ____r137))
  set(__k18 destash33(k ____r137))
  set(__form6 destash33(form ____r137))
  set(____id40 ____r137)
  set(__async1 has(____id40 "async"))
  set(__t1 compile(__t))
  set(__k19 compile(__k18))
  set(__ind5 indentation())
  set(__body13 compile_body(__form6))
  set(__e61 "")
  if(__async1)
    set(__e61 "async ")
  else()
    set(__e61 "")
  endif()
  set(__a6 "${__e61}")
  if(_37eq(has(setenv("target" toplevel ON) "value") "lua"))
    return(PROPAGATE cat(__ind5 "for " __k19 " in next, " __t1 " do\n" __body13 __ind5 "end\n"))
  else()
    if(_37eq(has(setenv("target" toplevel ON) "value") "py"))
      return(PROPAGATE cat(__ind5 __a6 "for " __k19 " in " __t1 ":\n" __body13))
    else()
      return(PROPAGATE cat(__ind5 "for (" __k19 " in " __t1 ") {\n" __body13 __ind5 "}\n"))
    endif()
  endif()
endfunction()
setenv("%for" special ___37for__special stmt ON tr ON)
function(___37with__special t form ...)
  set(____r138 unstash(...))
  set(__t2 destash33(t ____r138))
  set(__form7 destash33(form ____r138))
  set(____id41 ____r138)
  set(__async2 has(____id41 "async"))
  set(__t3 compile(__t2))
  set(__ind6 indentation())
  set(__body14 compile_body(__form7))
  set(__e62 "")
  if(__async2)
    set(__e62 "async ")
  else()
    set(__e62 "")
  endif()
  set(__a7 "${__e62}")
  if(_37eq(has(setenv("target" toplevel ON) "value") "py"))
    return(PROPAGATE cat(__ind6 __a7 "with " __t3 ":\n" __body14))
  else()
    return(PROPAGATE "")
  endif()
endfunction()
setenv("%with" special ___37with__special stmt ON tr ON)
function(___37block__special name t form)
  set(__t4 compile(t))
  set(__ind7 indentation())
  set(__body15 compile_body(form))
  set(__e63 "")
  if(some63(__t4))
    set(__e63 " ")
  else()
    set(__e63 "")
  endif()
  set(__sep "${__e63}")
  set(__e64 "")
  if(some63(__t4))
    set(__e64 "(")
  else()
    set(__e64 "")
  endif()
  set(__lh11 "${__e64}")
  set(__e65 "")
  if(some63(__t4))
    set(__e65 ")")
  else()
    set(__e65 "")
  endif()
  set(__rh11 "${__e65}")
  if(_37eq(has(setenv("target" toplevel ON) "value") "py"))
    return(PROPAGATE cat(__ind7 name __sep __t4 ":\n" __body15))
  else()
    return(PROPAGATE cat(__ind7 name __sep __lh11 __t4 __rh11 __sep "{\n" __body15 __ind7 "}\n"))
  endif()
endfunction()
setenv("%block" special ___37block__special stmt ON tr ON)
function(___37try__special form)
  set(__ind8 indentation())
  set(__body16 compile_body(form))
  set(__e66 "")
  if(_37eq(has(setenv("target" toplevel ON) "value") "py"))
    set(__e66 "%do" "import" "sys" "%local" "e" "%idx" "sys" "exc_info" "%return" "%array" OFF "%get" "e" 1 "e")
  else()
    set(__e66 "%return" "%array" OFF "e")
  endif()
  set(__hf "${__e66}")
  set(setenv("indent-level" toplevel ON).value has(setenv("indent-level" toplevel ON) "value") + 1)
  set(____x210 compile(__hf stmt ON))
  set(setenv("indent-level" toplevel ON).value has(setenv("indent-level" toplevel ON) "value") - 1)
  set(__h3 ____x210)
  if(_37eq(has(setenv("target" toplevel ON) "value") "js"))
    return(PROPAGATE cat(__ind8 "try {\n" __body16 __ind8 "}\n" __ind8 "catch (e) {\n" __h3 __ind8 "}\n"))
  else()
    return(PROPAGATE cat(__ind8 "try:\n" __body16 __ind8 "except:\n" __h3))
  endif()
endfunction()
setenv("%try" special ___37try__special stmt ON tr ON)
function(___37delete__special place)
  set(__e67 "")
  if(_37eq(has(setenv("target" toplevel ON) "value") "py"))
    set(__e67 "del ")
  else()
    set(__e67 "delete ")
  endif()
  return(PROPAGATE cat(indentation() "${__e67}" compile(place)))
endfunction()
setenv("%delete" special ___37delete__special stmt ON)
function(___37break__special)
  set(__e68 "")
  if(_37eq(has(setenv("target" toplevel ON) "value") "cmake"))
    set(__e68 "()")
  else()
    set(__e68 "")
  endif()
  return(PROPAGATE cat(indentation() "break" "${__e68}"))
endfunction()
setenv("%break" special ___37break__special stmt ON)
function(___37function__special args ...)
  set(____r143 unstash(...))
  set(__args15 destash33(args ____r143))
  set(____id42 ____r143)
  set(__body17 cut(____id42 0))
  return(PROPAGATE apply(compile_function join(__args15 __body17 )))
endfunction()
setenv("%function" special ___37function__special)
function(___37global_function__special name args ...)
  set(____r144 unstash(...))
  set(__name8 destash33(name ____r144))
  set(__args16 destash33(args ____r144))
  set(____id43 ____r144)
  set(__body18 cut(____id43 0))
  if(_37eq(has(setenv("target" toplevel ON) "value") "lua") OR (_37eq(has(setenv("target" toplevel ON) "value") "py") OR _37eq(has(setenv("target" toplevel ON) "value") "cmake")))
    set(____x216 object(__args16))
    set(____x216.name __name8)
    set(____x217 object())
    set(____x217.name __name8)
    set(__x215 apply(compile_function join(____x216 __body18 ____x217)))
    return(PROPAGATE cat(indentation() __x215))
  else()
    return(PROPAGATE compile("%set" __name8 join("%function" __args16 __body18) stmt ON))
  endif()
endfunction()
setenv("%global-function" special ___37global_function__special stmt ON tr ON)
function(___37local_function__special name args ...)
  set(____r145 unstash(...))
  set(__name9 destash33(name ____r145))
  set(__args17 destash33(args ____r145))
  set(____id44 ____r145)
  set(__body19 cut(____id44 0))
  if(_37eq(has(setenv("target" toplevel ON) "value") "lua") OR (_37eq(has(setenv("target" toplevel ON) "value") "py") OR _37eq(has(setenv("target" toplevel ON) "value") "cmake")))
    set(____x222 object(__args17))
    set(____x222.name __name9)
    set(____x222.prefix "local")
    set(____x223 object())
    set(____x223.name __name9)
    set(____x223.prefix "local")
    set(__x221 apply(compile_function join(____x222 __body19 ____x223)))
    return(PROPAGATE cat(indentation() __x221))
  else()
    return(PROPAGATE compile("%local" __name9 join("%function" __args17 __body19) stmt ON))
  endif()
endfunction()
setenv("%local-function" special ___37local_function__special stmt ON tr ON)
function(___37ref__special variable)
  if(id63(variable))
    return(PROPAGATE compile(variable))
  else()
    return(PROPAGATE cat("${" compile(variable) "}"))
  endif()
endfunction()
setenv("%ref" special ___37ref__special)
function(___37id__special x)
  return(PROPAGATE escape(compile("%ptr" x)))
endfunction()
setenv("%id" special ___37id__special)
function(___37ptr__special x)
  set(__e69 "")
  if(reference63(x))
    set(__e69 x)
  else()
    set(__e69 "%ref" x)
  endif()
  return(PROPAGATE compile("${__e69}"))
endfunction()
setenv("%ptr" special ___37ptr__special)
function(___37return__special x)
  set(__e70 "")
  if(_37eq(has(setenv("target" toplevel ON) "value") "cmake"))
    set(__e72 "")
    if(nil63(x))
      set(__e72 "return")
    else()
      set(__e72 "return" "PROPAGATE" x)
    endif()
    set(__e70 compile("${__e72}"))
  else()
    set(__e71 "")
    if(nil63(x))
      set(__e71 "return")
    else()
      set(__e71 cat("return " compile(x)))
    endif()
    set(__e70 "${__e71}")
  endif()
  return(PROPAGATE cat(indentation() "${__e70}"))
endfunction()
setenv("%return" special ___37return__special stmt ON)
function(___37new__special x)
  return(PROPAGATE cat("new " compile(x)))
endfunction()
setenv("%new" special ___37new__special)
function(___37typeof__special x)
  return(PROPAGATE cat("typeof(" compile(x) ")"))
endfunction()
setenv("%typeof" special ___37typeof__special)
function(___37error__special x)
  set(__e73 "")
  if(_37eq(has(setenv("target" toplevel ON) "value") "js"))
    set(__e73 cat("throw " compile("%new" "Error" x)))
  else()
    set(__e74 "")
    if(_37eq(has(setenv("target" toplevel ON) "value") "py"))
      set(__e74 cat("raise " compile("Exception" x)))
    else()
      set(__e74 cat("error(" compile(x) ")"))
    endif()
    set(__e73 "${__e74}")
  endif()
  set(__e7 "${__e73}")
  return(PROPAGATE cat(indentation() __e7))
endfunction()
setenv("%error" special ___37error__special stmt ON)
function(___37throw__special x)
  set(__e75 "")
  if(_37eq(has(setenv("target" toplevel ON) "value") "js"))
    set(__e75 cat("throw " compile(x)))
  else()
    set(__e76 "")
    if(_37eq(has(setenv("target" toplevel ON) "value") "py"))
      set(__e76 cat("raise " compile(x)))
    else()
      set(__e76 cat("error(" compile(x) ")"))
    endif()
    set(__e75 "${__e76}")
  endif()
  set(__e8 "${__e75}")
  return(PROPAGATE cat(indentation() __e8))
endfunction()
setenv("%throw" special ___37throw__special stmt ON)
function(___37local__special name value)
  if(_37eq(has(setenv("target" toplevel ON) "value") "cmake"))
    return(PROPAGATE compile("%set" name value))
  endif()
  if(nil63(value) AND _37eq(has(setenv("target" toplevel ON) "value") "py"))
    set(value "nil")
  endif()
  set(__id45 compile(name))
  set(__value1 compile(value))
  set(__e77 "")
  if(is63(value))
    set(__e77 cat(" = " __value1))
  else()
    set(__e77 "")
  endif()
  set(__rh2 "${__e77}")
  set(__e78 "")
  if(_37eq(has(setenv("target" toplevel ON) "value") "js"))
    set(__e78 "var ")
  else()
    set(__e79 "")
    if(_37eq(has(setenv("target" toplevel ON) "value") "lua"))
      set(__e79 "local ")
    else()
      set(__e79 "")
    endif()
    set(__e78 "${__e79}")
  endif()
  set(__keyword "${__e78}")
  set(__ind9 indentation())
  return(PROPAGATE cat(__ind9 __keyword __id45 __rh2))
endfunction()
setenv("%local" special ___37local__special stmt ON)
function(___37set__special lh rh)
  set(__lh2 compile(lh))
  set(__e80 "")
  if(nil63(rh))
    set(__e80 "nil")
  else()
    set(__e80 rh)
  endif()
  set(__rh3 compile("${__e80}"))
  set(__ind10 indentation())
  if(_37eq(has(setenv("target" toplevel ON) "value") "cmake"))
    return(PROPAGATE cat(indentation() "set(" __lh2 " " __rh3 ")"))
  else()
    return(PROPAGATE cat(indentation() __lh2 " = " __rh3))
  endif()
endfunction()
setenv("%set" special ___37set__special stmt ON)
function(___37get__special t k)
  set(__t11 compile(t))
  set(__k111 compile(k))
  if(_37eq(has(setenv("target" toplevel ON) "value") "lua") AND _37eq(char(__t11 0) "{") OR infix_operator63(t))
    set(__t11 cat("(" __t11 ")"))
  endif()
  if(string_literal63(k) AND (valid_id63(inner(k)) AND NOT( _37eq(has(setenv("target" toplevel ON) "value") "py"))))
    return(PROPAGATE cat(__t11 "." inner(k)))
  else()
    return(PROPAGATE cat(__t11 "[" __k111 "]"))
  endif()
endfunction()
setenv("%get" special ___37get__special)
function(___37idx__special t k)
  set(__t12 compile(t))
  set(__k121 compile(k "raw"))
  if(_37eq(has(setenv("target" toplevel ON) "value") "lua") AND _37eq(char(__t12 0) "{") OR infix_operator63(t))
    set(__t12 cat("(" __t12 ")"))
  endif()
  return(PROPAGATE cat(__t12 "." __k121))
endfunction()
setenv("%idx" special ___37idx__special)
function(___37array__special ...)
  set(__forms2 unstash(...))
  if(_37eq(has(setenv("target" toplevel ON) "value") "cmake"))
    return(PROPAGATE mapcat(compile __forms2 " "))
  else()
    set(__e81 "")
    if(_37eq(has(setenv("target" toplevel ON) "value") "lua"))
      set(__e81 "{")
    else()
      set(__e81 "[")
    endif()
    set(__open "${__e81}")
    set(__e82 "")
    if(_37eq(has(setenv("target" toplevel ON) "value") "lua"))
      set(__e82 "}")
    else()
      set(__e82 "]")
    endif()
    set(__close "${__e82}")
    set(__s6 "")
    set(__c6 "")
    set(____o11 __forms2)
    set(__k20 "")
    for (__k20 in ____o11) {
      set(__v10 ____o11[__k20])
      set(__e83 "")
      if(numeric63(__k20))
        set(__e83 parseInt(__k20))
      else()
        set(__e83 __k20)
      endif()
      set(__k21 "${__e83}")
      if(number63(__k21))
        set(__s6 cat(__s6 __c6 compile(__v10)))
        set(__c6 ", ")
      endif()
    }
    return(PROPAGATE cat(__open __s6 __close))
  endif()
endfunction()
setenv("%array" special ___37array__special)
function(___37object__special ...)
  set(__forms3 unstash(...))
  set(__e84 "")
  if(_37eq(has(setenv("target" toplevel ON) "value") "cmake"))
    set(__e84 "")
  else()
    set(__e84 "{")
  endif()
  set(__s7 "${__e84}")
  set(__c7 "")
  set(__e85 "")
  if(_37eq(has(setenv("target" toplevel ON) "value") "lua"))
    set(__e85 " = ")
  else()
    set(__e86 "")
    if(_37eq(has(setenv("target" toplevel ON) "value") "cmake"))
      set(__e86 " ")
    else()
      set(__e86 ": ")
    endif()
    set(__e85 "${__e86}")
  endif()
  set(__sep1 "${__e85}")
  set(setenv("indent-level" toplevel ON).value has(setenv("indent-level" toplevel ON) "value") + 1)
  set(____x236 indentation())
  set(setenv("indent-level" toplevel ON).value has(setenv("indent-level" toplevel ON) "value") - 1)
  set(__ind11 ____x236)
  set(__e87 "")
  if(_35(__forms3) GREATER 2)
    set(__e87 cat("\n" __ind11))
  endif()
  set(__pad "${__e87}")
  set(__e88 "")
  if(is63(__pad))
    set(__e88 cat("\n" indentation()))
  else()
    set(__e88 "")
  endif()
  set(__end "${__e88}")
  set(__s7 cat(__s7 either(__pad "")))
  set(____x237 pair(__forms3))
  set(____i23 0)
  while(____i23 LESS _35(____x237))
    set(____id46 ____x237[____i23])
    set(__k22 has(____id46 0))
    set(__v11 has(____id46 1))
    set(setenv("indent-level" toplevel ON).value has(setenv("indent-level" toplevel ON) "value") + 1)
    set(____x238 compile(__v11))
    set(setenv("indent-level" toplevel ON).value has(setenv("indent-level" toplevel ON) "value") - 1)
    set(__s7 cat(__s7 __c7 key(__k22) __sep1 ____x238))
    set(__e89 "")
    if(_37eq(has(setenv("target" toplevel ON) "value") "cmake"))
      set(__e89 "")
    else()
      set(__e89 ",")
    endif()
    set(__c7 cat("${__e89}" either(__pad " ")))
    set(____i23 ____i23 + 1)
  endwhile()
  set(__e90 "")
  if(_37eq(has(setenv("target" toplevel ON) "value") "cmake"))
    set(__e90 "")
  else()
    set(__e90 "}")
  endif()
  return(PROPAGATE cat(__s7 __end "${__e90}"))
endfunction()
setenv("%object" special ___37object__special)
function(___37list__special form comps cond ...)
  set(____r158 unstash(...))
  set(__form8 destash33(form ____r158))
  set(__comps destash33(comps ____r158))
  set(__cond3 destash33(cond ____r158))
  set(____id47 ____r158)
  set(__kind has(____id47 "kind"))
  set(__s8 compile(__form8))
  set(__e91 "")
  if(_37eq(__kind "object"))
    set(__e91 "{" "}")
  else()
    set(__e91 "[" "]")
  endif()
  set(____id48 "${__e91}")
  set(__lh3 has(____id48 0))
  set(__rh4 has(____id48 1))
  if(NOT( _37eq(__kind "object")))
    set(__s8 cat("(" __s8 ")"))
  endif()
  set(____x242 __comps)
  set(____i24 0)
  while(____i24 LESS _35(____x242))
    set(____id49 ____x242[____i24])
    set(__k23 has(____id49 0))
    set(__v12 has(____id49 1))
    set(__s8 cat(__s8 " for " compile(__k23) " in " compile(__v12)))
    set(____i24 ____i24 + 1)
  endwhile()
  if(is63(__cond3))
    set(__s8 cat(__s8 " if " compile(__cond3)))
  endif()
  return(PROPAGATE cat(__lh3 __s8 __rh4))
endfunction()
setenv("%list" special ___37list__special)
function(compile_literal x)
  if(string_literal63(x))
    return(PROPAGATE inner(x))
  else()
    return(PROPAGATE compile(x))
  endif()
endfunction()
function(___37literal__special ...)
  set(__args18 unstash(...))
  return(PROPAGATE mapcat(compile_literal __args18))
endfunction()
setenv("%literal" special ___37literal__special)
function(___37compile__special ...)
  set(__args19 unstash(...))
  return(PROPAGATE mapcat(compile __args19))
endfunction()
setenv("%compile" special ___37compile__special)
function(__global__special x)
  if(_37eq(has(setenv("target" toplevel ON) "value") "py"))
    return(PROPAGATE cat(indentation() "global " compile(x) "\n"))
  else()
    return(PROPAGATE "")
  endif()
endfunction()
setenv("global" special __global__special stmt ON tr ON)
function(__import__special name ...)
  set(____r161 unstash(...))
  set(__name10 destash33(name ____r161))
  set(____id50 ____r161)
  set(__alias2 cut(____id50 0))
  set(__ind12 indentation())
  set(__e92 "")
  if(_37eq(hd(__alias2) "as"))
    set(__e92 __alias2[1])
  else()
    set(__e92 hd(__alias2))
  endif()
  set(__as1 "${__e92}")
  set(__id51 __as1 OR __name10)
  if(_37eq(has(setenv("target" toplevel ON) "value") "py"))
    set(__s9 cat(__ind12 "import " compile(__name10)))
    if(__as1)
      set(__s9 cat(__s9 " as " compile(__id51)))
    endif()
    return(PROPAGATE __s9)
  else()
    return(PROPAGATE cat(__ind12 compile("%local" __id51 "require" escape(__name10))))
  endif()
endfunction()
setenv("import" special __import__special stmt ON)
function(__from__special name ...)
  set(____r162 unstash(...))
  set(__name11 destash33(name ____r162))
  set(____id52 ____r162)
  set(__imports cut(____id52 0))
  set(__ind13 indentation())
  set(__id53 __name11)
  set(__r163 "")
  set(__r163 drop(__imports))
  set(__e93 "")
  if(_37eq(last(__imports) "as"))
    set(__e93 drop(__imports))
  else()
    add(__imports __r163)
    set(__r163 "")
    set(__e93 __r163)
  endif()
  set(__as2 __r163)
  set(__e94 "")
  if(_37eq(hd(__imports) "import"))
    set(__e94 tl(__imports))
  else()
    set(__e94 __imports)
  endif()
  set(__names1 "${__e94}")
  function(__f12 x)
    if(_37eq(x "*"))
      return(PROPAGATE x)
    else()
      return(PROPAGATE compile(x))
    endif()
  endfunction()
  set(__names2 mapcat(__f12 __names1 ", "))
  if(_37eq(has(setenv("target" toplevel ON) "value") "py"))
    set(__s10 cat(__ind13 "from " compile(__name11) " import " __names2))
    if(__as2)
      set(__s10 cat(__s10 " as " compile(__as2)))
    endif()
    return(PROPAGATE __s10)
  else()
    return(PROPAGATE "")
  endif()
endfunction()
setenv("from" special __from__special stmt ON)
function(___44__special ...)
  set(__args20 unstash(...))
  if(none63(__args20))
    return(PROPAGATE ", ")
  else()
    if(one63(__args20))
      return(PROPAGATE cat(", " compile(hd(__args20))))
    else()
      return(PROPAGATE mapcat(compile __args20 ", "))
    endif()
  endif()
endfunction()
setenv("," special ___44__special)
function(__3458__special34 ...)
  set(__args21 unstash(...))
  if(none63(__args21))
    return(PROPAGATE ":")
  else()
    if(one63(__args21))
      return(PROPAGATE cat(":" compile(hd(__args21))))
    else()
      return(PROPAGATE mapcat(compile __args21 ":"))
    endif()
  endif()
endfunction()
setenv(":" special __3458__special34)
function(___37as__special form id)
  return(PROPAGATE cat(compile(form) " as " compile(id)))
endfunction()
setenv("%as" special ___37as__special)
function(__yield__special ...)
  set(__args22 unstash(...))
  return(PROPAGATE cat(indentation() "yield " mapcat(compile __args22 ", ")))
endfunction()
setenv("yield" special __yield__special stmt ON)
function(__await__special x)
  set(__e95 "")
  if(_37eq(has(setenv("target" toplevel ON) "value") "lua"))
    set(__e95 "")
  else()
    set(__e95 "await ")
  endif()
  set(__a8 "${__e95}")
  return(PROPAGATE cat(__a8 compile(x)))
endfunction()
setenv("await" special __await__special)
function(___37b__special x)
  return(PROPAGATE cat("b" compile(x)))
endfunction()
setenv("%b" special ___37b__special)
function(___37f__special x)
  return(PROPAGATE cat("f" compile(x)))
endfunction()
setenv("%f" special ___37f__special)
function(___37r__special x)
  return(PROPAGATE cat("r" compile(x)))
endfunction()
setenv("%r" special ___37r__special)
function(___64__special x)
  return(PROPAGATE cat(indentation() "@" compile(x)))
endfunction()
setenv("@" special ___64__special stmt ON)
