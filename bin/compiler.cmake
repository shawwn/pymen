function(getenv k p)
  if(string63(k))
    set(__i edge(environment))
    while(__i GREATER_EQUAL 0)
      if(has63(environment[__i] k))
        set(__b environment[__i][k])
        set(__e46 "")
        if(p)
          set(__e46 has(__b p))
        else()
          set(__e46 __b)
        endif()
        return(PROPAGATE "${__e46}")
      else()
        set(__i __i - 1)
      endif()
    endwhile()
  endif()
endfunction()
function(macro_function k)
  return(PROPAGATE getenv(k "macro"))
endfunction()
function(macro63 k)
  return(PROPAGATE is63(macro_function(k)))
endfunction()
function(special63 k)
  return(PROPAGATE is63(getenv(k "special")))
endfunction()
function(special_form63 form)
  return(PROPAGATE NOT atom63(form) AND special63(hd(form)))
endfunction()
function(statement63 k)
  return(PROPAGATE special63(k) AND getenv(k "stmt"))
endfunction()
function(symbol_expansion k)
  return(PROPAGATE getenv(k "symbol"))
endfunction()
function(symbol63 k)
  return(PROPAGATE is63(symbol_expansion(k)))
endfunction()
function(variable63 k)
  return(PROPAGATE is63(getenv(k "variable")))
endfunction()
function(bound63 x)
  return(PROPAGATE macro63(x) OR (special63(x) OR (symbol63(x) OR variable63(x))))
endfunction()
function(keyword63 atom)
  return(PROPAGATE string63(atom) AND (_35(atom) GREATER 1 AND _37eq(char(atom 0) ":")))
endfunction()
function(quoted form)
  if(keyword63(form))
    return(PROPAGATE form)
  else()
    if(string63(form))
      return(PROPAGATE escape(form))
    else()
      if(atom63(form))
        return(PROPAGATE form)
      else()
        return(PROPAGATE join("list" map(quoted form)))
      endif()
    endif()
  endif()
endfunction()
function(literal s)
  if(string_literal63(s))
    return(PROPAGATE s)
  else()
    return(PROPAGATE quoted(s))
  endif()
endfunction()
function(stash42 args)
  if(props63(args))
    if(_37eq(has(setenv("target" toplevel ON) "value") "py"))
      set(__l array(args))
      set(____o args)
      set(__k "")
      for (__k in ____o) {
        set(__v ____o[__k])
        set(__e49 "")
        if(numeric63(__k))
          set(__e49 parseInt(__k))
        else()
          set(__e49 __k)
        endif()
        set(__k1 "${__e49}")
        if(NOT number63(__k1))
          add(__l "%literal" __k1 "|=|" __v)
        endif()
      }
      return(PROPAGATE __l)
    else()
      if(_37eq(has(setenv("target" toplevel ON) "value") "cmake"))
        set(__l1 array(args))
        set(____o1 args)
        set(__k2 "")
        for (__k2 in ____o1) {
          set(__v1 ____o1[__k2])
          set(__e48 "")
          if(numeric63(__k2))
            set(__e48 parseInt(__k2))
          else()
            set(__e48 __k2)
          endif()
          set(__k3 "${__e48}")
          if(NOT number63(__k3))
            add(__l1 "%literal" __k3 "| |" __v1)
          endif()
        }
        return(PROPAGATE __l1)
      else()
        set(__l2 "%object" "\"_stash\"" ON)
        set(____o2 args)
        set(__k4 "")
        for (__k4 in ____o2) {
          set(__v2 ____o2[__k4])
          set(__e47 "")
          if(numeric63(__k4))
            set(__e47 parseInt(__k4))
          else()
            set(__e47 __k4)
          endif()
          set(__k5 "${__e47}")
          if(NOT number63(__k5))
            add(__l2 literal(__k5))
            add(__l2 __v2)
          endif()
        }
        return(PROPAGATE join( args __l2))
      endif()
    endif()
  else()
    return(PROPAGATE args)
  endif()
endfunction()
function(bias k)
  if(number63(k))
    if(_37eq(has(setenv("target" toplevel ON) "value") "lua"))
      set(k k + 1)
    endif()
    return(PROPAGATE k)
  else()
    return(PROPAGATE k)
  endif()
endfunction()
function(bind lh rh)
  if(atom63(lh))
    return(PROPAGATE lh rh)
  else()
    if(hd63(lh ","))
      return(PROPAGATE bind(cut(lh 1) rh))
    else()
      if(_37eq(hd(lh) "t"))
        set(____id lh)
        set(___ has(____id 0))
        set(__var has(____id 1))
        set(__val has(____id 2))
        set(__val1 either(__val __var))
        return(PROPAGATE bind("o" __var "the" __val1 rh))
      else()
        if(_37eq(hd(lh) "o"))
          set(____id1 lh)
          set(___1 has(____id1 0))
          set(__var1 has(____id1 1))
          set(__val2 has(____id1 2))
          return(PROPAGATE __var1 "if" "nil?" rh __val2 rh)
        else()
          set(__id2 unique("id"))
          set(__bs __id2 rh)
          set(____o3 lh)
          set(__k6 "")
          for (__k6 in ____o3) {
            set(__v3 ____o3[__k6])
            set(__e50 "")
            if(numeric63(__k6))
              set(__e50 parseInt(__k6))
            else()
              set(__e50 __k6)
            endif()
            set(__k7 "${__e50}")
            set(__e51 "")
            if(_37eq(__k7 "rest"))
              set(__e51 "cut" __id2 _35(lh))
            else()
              set(__e51 "has" __id2 "quote" bias(__k7))
            endif()
            set(__x12 "${__e51}")
            if(is63(__k7))
              set(__e52 "")
              if(_37eq(__v3 ON))
                set(__e52 __k7)
              else()
                set(__e52 __v3)
              endif()
              set(__k8 "${__e52}")
              set(__bs join(__bs bind(__k8 __x12)))
            endif()
          }
          return(PROPAGATE __bs)
        endif()
      endif()
    endif()
  endif()
endfunction()
function(__arguments37__macro from)
  set(____x24 object("target"))
  set(____x24.js "%idx" "%idx" "%idx" "Array" "prototype" "slice" "call" "arguments" from)
  set(____x24.py "|list|" "|_args|")
  set(____x24.lua "list" "|...|")
  set(____x24.cmake "%ref" "ARGN")
  return(PROPAGATE ____x24)
endfunction()
setenv("arguments%" macro __arguments37__macro)
function(body_docstring body)
  if(_35(body) GREATER 1 AND string_literal63(hd(body)))
    return(PROPAGATE hd(body) tl(body))
  else()
    return(PROPAGATE  body)
  endif()
endfunction()
function(bind42 args body)
  set(__args1 )
  function(rest)
    set(__args1.rest ON)
    set(____x36 object("target"))
    set(____x36.py "obj" "...")
    return(PROPAGATE "unstash" "list" "..." ____x36)
  endfunction()
  if(atom63(args))
    return(PROPAGATE __args1 join("let" args rest() body))
  else()
    set(____id3 body_docstring(body))
    set(__doc has(____id3 0))
    set(__body has(____id3 1))
    set(__pre )
    set(__bs1 )
    set(__inits )
    set(__r21 unique("r"))
    set(____o4 args)
    set(__k9 "")
    for (__k9 in ____o4) {
      set(__v4 ____o4[__k9])
      set(__e53 "")
      if(numeric63(__k9))
        set(__e53 parseInt(__k9))
      else()
        set(__e53 __k9)
      endif()
      set(__k10 "${__e53}")
      if(number63(__k10))
        if(atom63(__v4))
          add(__args1 __v4)
        else()
          if(_37eq(hd(__v4) "o"))
            set(____id4 __v4)
            set(___2 has(____id4 0))
            set(__var2 has(____id4 1))
            set(__val3 has(____id4 2))
            add(__args1 __var2)
            add(__inits "%if" "nil?" __var2 "%set" __var2 __val3)
          else()
            if(_37eq(hd(__v4) "t"))
              set(____id5 __v4)
              set(___3 has(____id5 0))
              set(__var3 has(____id5 1))
              set(__val4 has(____id5 2))
              set(__val5 either(__val4 __var3))
              add(__args1 __var3)
              add(__inits "%if" "nil?" __var3 "%set" __var3 "the" __val5)
            else()
              set(__x48 unique("x"))
              add(__args1 __x48)
              set(__bs1 join(__bs1 __v4 __x48))
            endif()
          endif()
        endif()
      endif()
    }
    if(props63(args))
      set(__pre join(__pre __r21 rest()))
      set(__n5 _35(__args1))
      set(__i6 0)
      while(__i6 LESS __n5)
        set(__v5 __args1[__i6])
        set(__pre join(__pre __v5 "destash!" __v5 __r21))
        set(__i6 __i6 + 1)
      endwhile()
      set(__bs1 join(__bs1 props(args) __r21))
    endif()
    set(__forms join("let" __pre __inits join("let" __bs1 __body)))
    set(__e54 "")
    if(is63(__doc))
      set(__e54 "do" __doc __forms)
    else()
      set(__e54 __forms)
    endif()
    return(PROPAGATE __args1 "${__e54}")
  endif()
endfunction()
function(quoting63 depth)
  return(PROPAGATE number63(depth))
endfunction()
function(quasiquoting63 depth)
  return(PROPAGATE quoting63(depth) AND depth GREATER 0)
endfunction()
function(can_unquote63 depth)
  return(PROPAGATE quoting63(depth) AND _37eq(depth 1))
endfunction()
function(quasisplice63 x depth)
  return(PROPAGATE can_unquote63(depth) AND (NOT atom63(x) AND _37eq(hd(x) "unquote-splicing")))
endfunction()
function(expand_local __x59)
  set(____id6 __x59)
  set(__x60 has(____id6 0))
  set(__name has(____id6 1))
  set(__value has(____id6 2))
  setenv(__name variable ON)
  return(PROPAGATE "%local" __name macroexpand(__value))
endfunction()
function(expand_function __x62)
  set(____id7 __x62)
  set(__x63 has(____id7 0))
  set(__args has(____id7 1))
  set(__body1 cut(____id7 2))
  add(environment )
  set(____r29 "")
  try{
    set(____o5 __args)
    set(____i7 "")
    for (____i7 in ____o5) {
      set(____x64 ____o5[____i7])
      set(__e55 "")
      if(numeric63(____i7))
        set(__e55 parseInt(____i7))
      else()
        set(__e55 ____i7)
      endif()
      set(____i71 "${__e55}")
      setenv(____x64 variable ON)
    }
    set(____r29 join("%function" __args macroexpand(__body1)))
  }
  finally{
    drop(environment)
  }
  return(PROPAGATE ____r29)
endfunction()
function(expand_definition __x66)
  set(____id8 __x66)
  set(__x67 has(____id8 0))
  set(__name1 has(____id8 1))
  set(__args11 has(____id8 2))
  set(__body2 cut(____id8 3))
  add(environment )
  set(____r32 "")
  try{
    set(____o6 __args11)
    set(____i8 "")
    for (____i8 in ____o6) {
      set(____x68 ____o6[____i8])
      set(__e56 "")
      if(numeric63(____i8))
        set(__e56 parseInt(____i8))
      else()
        set(__e56 ____i8)
      endif()
      set(____i81 "${__e56}")
      setenv(____x68 variable ON)
    }
    set(____r32 join(__x67 __name1 __args11 macroexpand(__body2)))
  }
  finally{
    drop(environment)
  }
  return(PROPAGATE ____r32)
endfunction()
function(expand_macro form)
  return(PROPAGATE macroexpand(expand1(form)))
endfunction()
function(expand1 __x70)
  set(____id9 __x70)
  set(__name2 has(____id9 0))
  set(__body3 cut(____id9 1))
  return(PROPAGATE apply(macro_function(__name2) __body3))
endfunction()
function(real63 x)
  return(PROPAGATE number63(x) AND (NOT nan63(x) AND NOT inf63(x)))
endfunction()
function(valid_access63 str)
  return(PROPAGATE _35(str) GREATER 2 AND (NOT( _37eq("." char(str 0))) AND (NOT( _37eq("." char(str edge(str)))) AND NOT search(str ".."))))
endfunction()
function(parse_access str)
  function(__f2 a b)
    set(__n8 number(a))
    if(is63(__n8))
      return(PROPAGATE "at" b __n8)
    else()
      return(PROPAGATE "%idx" b a)
    endif()
  endfunction()
  return(PROPAGATE reduce(__f2 reverse(split(str "."))))
endfunction()
function(parse_access63 form)
  return(PROPAGATE string63(form) AND (NOT string_literal63(form) AND (NOT id_literal63(form) AND (is63(search(form ".")) AND valid_access63(form)))))
endfunction()
function(macroexpand form)
  if(parse_access63(form))
    return(PROPAGATE macroexpand(parse_access(form)))
  else()
    if(symbol63(form))
      return(PROPAGATE macroexpand(symbol_expansion(form)))
    else()
      if(atom63(form))
        return(PROPAGATE form)
      else()
        set(__x73 hd(form))
        if(_37eq(__x73 "%local"))
          return(PROPAGATE expand_local(form))
        else()
          if(_37eq(__x73 "%function"))
            return(PROPAGATE expand_function(form))
          else()
            if(_37eq(__x73 "%global-function"))
              return(PROPAGATE expand_definition(form))
            else()
              if(_37eq(__x73 "%local-function"))
                return(PROPAGATE expand_definition(form))
              else()
                if(_37eq(__x73 "%expansion"))
                  return(PROPAGATE form[1])
                else()
                  if(macro63(__x73))
                    return(PROPAGATE expand_macro(form))
                  else()
                    if(parse_access63(__x73))
                      return(PROPAGATE macroexpand(join(parse_access(__x73) tl(form))))
                    else()
                      return(PROPAGATE map(macroexpand form))
                    endif()
                  endif()
                endif()
              endif()
            endif()
          endif()
        endif()
      endif()
    endif()
  endif()
endfunction()
function(quasiquote_list form depth)
  set(__xs "list")
  set(____o7 form)
  set(__k11 "")
  for (__k11 in ____o7) {
    set(__v6 ____o7[__k11])
    set(__e57 "")
    if(numeric63(__k11))
      set(__e57 parseInt(__k11))
    else()
      set(__e57 __k11)
    endif()
    set(__k12 "${__e57}")
    if(NOT number63(__k12))
      set(__e58 "")
      if(quasisplice63(__v6 depth))
        set(__e58 quasiexpand(__v6[1]))
      else()
        set(__e58 quasiexpand(__v6 depth))
      endif()
      set(__v7 "${__e58}")
      set(last(__xs)[__k12] __v7)
    endif()
  }
  set(____x77 form)
  set(____i10 0)
  while(____i10 LESS _35(____x77))
    set(__x78 ____x77[____i10])
    if(quasisplice63(__x78 depth))
      set(__x79 quasiexpand(__x78[1]))
      add(__xs __x79)
      add(__xs "list")
    else()
      add(last(__xs) quasiexpand(__x78 depth))
    endif()
    set(____i10 ____i10 + 1)
  endwhile()
  function(__f3 x)
    return(PROPAGATE _35(x) GREATER 1 OR (NOT( _37eq(hd(x) "list")) OR props63(x)))
  endfunction()
  set(__pruned keep(__f3 __xs))
  if(one63(__pruned))
    return(PROPAGATE hd(__pruned))
  else()
    return(PROPAGATE join("join" __pruned))
  endif()
endfunction()
function(quasiexpand form depth)
  if(quasiquoting63(depth))
    if(atom63(form))
      return(PROPAGATE "quote" form)
    else()
      if(can_unquote63(depth) AND _37eq(hd(form) "unquote"))
        return(PROPAGATE quasiexpand(form[1]))
      else()
        if(_37eq(hd(form) "unquote") OR _37eq(hd(form) "unquote-splicing"))
          return(PROPAGATE quasiquote_list(form depth - 1))
        else()
          if(_37eq(hd(form) "quasiquote"))
            return(PROPAGATE quasiquote_list(form depth + 1))
          else()
            return(PROPAGATE quasiquote_list(form depth))
          endif()
        endif()
      endif()
    endif()
  else()
    if(atom63(form))
      return(PROPAGATE form)
    else()
      if(_37eq(hd(form) "quote"))
        return(PROPAGATE form)
      else()
        if(_37eq(hd(form) "quasiquote"))
          return(PROPAGATE quasiexpand(form[1] 1))
        else()
          function(__f4 x)
            return(PROPAGATE quasiexpand(x depth))
          endfunction()
          return(PROPAGATE map(__f4 form))
        endif()
      endif()
    endif()
  endif()
endfunction()
function(expand_if __x83)
  set(____id10 __x83)
  set(__a has(____id10 0))
  set(__b1 has(____id10 1))
  set(__c cut(____id10 2))
  if(is63(__b1))
    return(PROPAGATE join("%if" __a __b1 expand_if(__c)))
  else()
    if(is63(__a))
      return(PROPAGATE __a)
    endif()
  endif()
endfunction()
setenv("indent-level" toplevel ON value 0)
setenv("indent-level" symbol "get-value" "quote" "indent-level")
function(indentation)
  set(__s "")
  set(__i11 0)
  while(__i11 LESS has(setenv("indent-level" toplevel ON) "value"))
    set(__s _37cat(__s "  "))
    set(__i11 __i11 + 1)
  endwhile()
  return(PROPAGATE __s)
endfunction()
set(reserved 
  ALL 
    "=" ON
    "==" ON
    "+" ON
    "_" ON
    "%" ON
    "*" ON
    "/" ON
    "<" ON
    ">" ON
    "<=" ON
    ">=" ON
  
  JS 
    BREAK ON
    CASE ON
    CATCH ON
    CLASS ON
    CONST ON
    CONTINUE ON
    DEBUGGER ON
    DEFAULT ON
    DELETE ON
    DO ON
    ELSE ON
    EVAL ON
    FINALLY ON
    FOR ON
    FUNCTION ON
    IF ON
    IMPORT ON
    IN ON
    INSTANCEOF ON
    LET ON
    RETURN ON
    SWITCH ON
    THROW ON
    TRY ON
    TYPEOF ON
    VAR ON
    VOID ON
    WITH ON
  
  LUA 
    AND ON
    END ON
    IN ON
    LOAD ON
    REPEAT ON
    WHILE ON
    BREAK ON
    FALSE ON
    LOCAL ON
    RETURN ON
    DO ON
    FOR ON
    NIL ON
    THEN ON
    ELSE ON
    FUNCTION ON
    NOT ON
    TRUE ON
    ELSEIF ON
    IF ON
    OR ON
    UNTIL ON
  
  PY 
    AND ON
    EXCEPT ON
    LAMBDA ON
    WITH ON
    AS ON
    FINALLY ON
    NONLOCAL ON
    WHILE ON
    ASSERT ON
    FALSE ON
    NONE ON
    YIELD ON
    BREAK ON
    FOR ON
    NOT ON
    CLASS ON
    FROM ON
    OR ON
    CONTINUE ON
    GLOBAL ON
    PASS ON
    DEF ON
    IF ON
    RAISE ON
    DEL ON
    IMPORT ON
    RETURN ON
    ELIF ON
    IN ON
    TRUE ON
    ELSE ON
    IS ON
    TRY ON
    STR ON
    PRINT ON
  
  CMAKE 
    "AND" ON
    "OR" ON
    "TRUE" ON
    "FALSE" ON
    "ON" ON
    "OFF" ON
    "Y" ON
    "N" ON
  
)
function(reserved63 x)
  return(PROPAGATE has63(reserved.all x) OR has63(reserved[has(setenv("target" toplevel ON) "value")] x))
endfunction()
function(valid_code63 n)
  return(PROPAGATE number_code63(n) OR (n GREATER 64 AND n LESS 91 OR (n GREATER 96 AND n LESS 123 OR _37eq(n 95))))
endfunction()
function(compile_keyword x)
  return(PROPAGATE escape(x))
endfunction()
function(compile_name name)
  if(keyword63(name))
    return(PROPAGATE compile(clip(name 1)))
  else()
    return(PROPAGATE compile(name))
  endif()
endfunction()
function(compile_id id raw63)
  if(keyword63(id))
    return(PROPAGATE compile_keyword(id))
  else()
    if(_37eq(code(id 0) 46))
      return(PROPAGATE _37cat("." compile_id(clip(id 1) ON)))
    else()
      set(__e59 "")
      if(_37eq(has(setenv("target" toplevel ON) "value") "py"))
        set(__e59 "L_")
      else()
        set(__e59 "_")
      endif()
      set(__x89 "${__e59}")
      set(__e60 "")
      if(number_code63(code(id 0)))
        set(__e60 __x89)
      else()
        set(__e60 "")
      endif()
      set(__id11 "${__e60}")
      set(__i12 0)
      while(__i12 LESS _35(id))
        set(__c1 char(id __i12))
        set(__n10 code(__c1))
        set(__e61 "")
        if(_37eq(__c1 "-") AND NOT( _37eq(id "-")))
          set(__e64 "")
          if(_37eq(__i12 0))
            set(__e64 __x89)
          else()
            set(__e64 "_")
          endif()
          set(__e61 "${__e64}")
        else()
          set(__e62 "")
          if(valid_code63(__n10))
            set(__e62 __c1)
          else()
            set(__e63 "")
            if(_37eq(__i12 0))
              set(__e63 _37cat(__x89 __n10))
            else()
              set(__e63 __n10)
            endif()
            set(__e62 "${__e63}")
          endif()
          set(__e61 "${__e62}")
        endif()
        set(__c11 "${__e61}")
        set(__id11 _37cat(__id11 __c11))
        set(__i12 __i12 + 1)
      endwhile()
      if(raw63)
        return(PROPAGATE __id11)
      else()
        if(reserved63(__id11))
          return(PROPAGATE _37cat(__x89 __id11))
        else()
          return(PROPAGATE __id11)
        endif()
      endif()
    endif()
  endif()
endfunction()
function(valid_id63 x)
  return(PROPAGATE some63(x) AND _37eq(x compile_id(x)))
endfunction()
set(__names )
function(unique x)
  set(__x90 compile_id(x))
  if(has63(__names __x90))
    set(__i13 __names[__x90])
    set(__names[__x90] __names[__x90] + 1)
    return(PROPAGATE unique(_37cat(__x90 __i13)))
  else()
    set(__names[__x90] 1)
    return(PROPAGATE _37cat("__" __x90))
  endif()
endfunction()
function(key k)
  if(_37eq(has(setenv("target" toplevel ON) "value") "py"))
    return(PROPAGATE compile(k))
  else()
    if(string_literal63(k))
      set(__i14 inner(k))
      if(_37eq(has(setenv("target" toplevel ON) "value") "cmake"))
        set(__e65 "")
        if(valid_id63(__i14))
          set(__e65 __i14)
        else()
          set(__e65 k)
        endif()
        return(PROPAGATE screamcase("${__e65}"))
      else()
        if(valid_id63(__i14))
          return(PROPAGATE __i14)
        else()
          return(PROPAGATE _37cat("[" _37cat(k "]")))
        endif()
      endif()
    else()
      return(PROPAGATE _37cat("[" _37cat(compile(k) "]")))
    endif()
  endif()
endfunction()
function(mapo f t)
  set(__o8 )
  set(____o9 t)
  set(__k13 "")
  for (__k13 in ____o9) {
    set(__v8 ____o9[__k13])
    set(__e66 "")
    if(numeric63(__k13))
      set(__e66 parseInt(__k13))
    else()
      set(__e66 __k13)
    endif()
    set(__k14 "${__e66}")
    set(__x91 f(__v8))
    if(is63(__x91))
      add(__o8 literal(__k14))
      add(__o8 __x91)
    endif()
  }
  return(PROPAGATE __o8)
endfunction()
set(____x93 object())
set(____x94 object())
set(____x94.js "!")
set(____x94.lua "not")
set(____x94.py "not")
set(____x94.cmake "NOT")
set(____x93["%not"] ____x94)
set(____x93["%unm"] "-")
set(____x95 object())
set(____x95["%mul"] "*")
set(____x95["%div"] "/")
set(____x95["%idiv"] "//")
set(____x95["%mod"] "%")
set(____x96 object())
set(____x97 object())
set(____x97.js "+")
set(____x97.lua "..")
set(____x97.py "+")
set(____x96["%cat"] ____x97)
set(____x98 object())
set(____x98["%add"] "+")
set(____x98["%sub"] "-")
set(____x99 object())
set(____x100 object())
set(____x100.cmake "LESS")
set(____x100.all "<")
set(____x99["%lt"] ____x100)
set(____x101 object())
set(____x101.cmake "GREATER")
set(____x101.all ">")
set(____x99["%gt"] ____x101)
set(____x102 object())
set(____x102.cmake "LESS_EQUAL")
set(____x102.all "<=")
set(____x99["%le"] ____x102)
set(____x103 object())
set(____x103.cmake "GREATER_EQUAL")
set(____x103.all ">=")
set(____x99["%ge"] ____x103)
set(____x104 object())
set(____x105 object())
set(____x105.js "===")
set(____x105.lua "==")
set(____x105.py "==")
set(____x104["%eq"] ____x105)
set(____x106 object())
set(____x107 object())
set(____x107.py "in")
set(____x106["%in"] ____x107)
set(____x108 object())
set(____x108.py "is")
set(____x106["%is"] ____x108)
set(____x109 object())
set(____x110 object())
set(____x110.js "&&")
set(____x110.lua "and")
set(____x110.py "and")
set(____x110.cmake "AND")
set(____x109["%and"] ____x110)
set(____x111 object())
set(____x112 object())
set(____x112.js "||")
set(____x112.lua "or")
set(____x112.py "or")
set(____x112.cmake "OR")
set(____x111["%or"] ____x112)
set(infix ____x93 ____x95 ____x96 ____x98 ____x99 ____x104 ____x106 ____x109 ____x111)
function(unary63 form)
  return(PROPAGATE two63(form) AND in63(hd(form) "%not" "%unm"))
endfunction()
function(index k)
  return(PROPAGATE k)
endfunction()
function(precedence form)
  if(NOT( atom63(form) OR unary63(form)))
    if(atom63(hd(form)))
      set(____o10 infix)
      set(__k15 "")
      for (__k15 in ____o10) {
        set(__v9 ____o10[__k15])
        set(__e67 "")
        if(numeric63(__k15))
          set(__e67 parseInt(__k15))
        else()
          set(__e67 __k15)
        endif()
        set(__k16 "${__e67}")
        if(has63(__v9 hd(form)))
          return(PROPAGATE index(__k16))
        endif()
      }
    endif()
  endif()
  return(PROPAGATE 0)
endfunction()
function(getop op)
  if(string63(op))
    function(__f5 level)
      set(__x114 has(level op))
      if(_37eq(__x114 ON))
        return(PROPAGATE op)
      else()
        if(string63(__x114))
          return(PROPAGATE __x114)
        else()
          if(is63(__x114))
            return(PROPAGATE has(__x114 has(setenv("target" toplevel ON) "value")) OR has(__x114 "all"))
          endif()
        endif()
      endif()
    endfunction()
    return(PROPAGATE find(__f5 infix))
  endif()
endfunction()
function(infix63 x)
  return(PROPAGATE is63(getop(x)))
endfunction()
function(infix_operator63 x)
  return(PROPAGATE NOT atom63(x) AND infix63(hd(x)))
endfunction()
function(compile_args args default63)
  set(__s1 "(")
  set(__c2 "")
  set(____x115 args)
  set(____i17 0)
  while(____i17 LESS _35(____x115))
    set(__x116 ____x115[____i17])
    set(__s1 _37cat(__s1 _37cat(__c2 compile(__x116))))
    if((_37eq(has(setenv("target" toplevel ON) "value") "py") OR _37eq(has(setenv("target" toplevel ON) "value") "cmake")) AND (default63 AND (NOT id_literal63(__x116) AND NOT( _37eq(__x116 "...")))))
      set(__e68 "")
      if(_37eq(has(setenv("target" toplevel ON) "value") "cmake"))
        set(__e68 "")
      else()
        set(__e68 "=None")
      endif()
      set(__s1 _37cat(__s1 "${__e68}"))
    endif()
    set(__e69 "")
    if(_37eq(has(setenv("target" toplevel ON) "value") "cmake"))
      set(__e69 " ")
    else()
      set(__e69 ", ")
    endif()
    set(__c2 "${__e69}")
    set(____i17 ____i17 + 1)
  endwhile()
  return(PROPAGATE _37cat(__s1 ")"))
endfunction()
function(escape_newlines s)
  if(nil63(search(s "\n")) AND nil63(search(s "\r")))
    return(PROPAGATE s)
  else()
    set(__s11 "")
    set(__i18 0)
    while(__i18 LESS _35(s))
      set(__c3 char(s __i18))
      set(__e70 "")
      if(_37eq(__c3 "\n"))
        set(__e70 "\\n")
      else()
        set(__e71 "")
        if(_37eq(__c3 "\r"))
          set(__e71 "\\r")
        else()
          set(__e71 __c3)
        endif()
        set(__e70 "${__e71}")
      endif()
      set(__s11 _37cat(__s11 "${__e70}"))
      set(__i18 __i18 + 1)
    endwhile()
    return(PROPAGATE __s11)
  endif()
endfunction()
function(compile_nil)
  if(_37eq(has(setenv("target" toplevel ON) "value") "py"))
    return(PROPAGATE "None")
  else()
    if(_37eq(has(setenv("target" toplevel ON) "value") "cmake"))
      return(PROPAGATE "\"\"")
    else()
      if(_37eq(has(setenv("target" toplevel ON) "value") "lua"))
        return(PROPAGATE "nil")
      else()
        return(PROPAGATE "undefined")
      endif()
    endif()
  endif()
endfunction()
function(compile_boolean x)
  if(_37eq(has(setenv("target" toplevel ON) "value") "py"))
    if(x)
      return(PROPAGATE "True")
    else()
      return(PROPAGATE "False")
    endif()
  else()
    if(_37eq(has(setenv("target" toplevel ON) "value") "cmake"))
      if(x)
        return(PROPAGATE "ON")
      else()
        return(PROPAGATE "OFF")
      endif()
    else()
      if(x)
        return(PROPAGATE "true")
      else()
        return(PROPAGATE "false")
      endif()
    endif()
  endif()
endfunction()
function(triple_quoted63 x)
  return(PROPAGATE string_literal63(x) AND (string_literal63(inner(x)) AND string_literal63(inner(inner(x)))))
endfunction()
function(un_triple_quote x)
  return(PROPAGATE escape(inner(inner(inner(x)))))
endfunction()
function(compile_string x)
  if(triple_quoted63(x))
    if(_37eq(has(setenv("target" toplevel ON) "value") "py"))
      return(PROPAGATE x)
    else()
      return(PROPAGATE escape_newlines(un_triple_quote(x)))
    endif()
  else()
    return(PROPAGATE escape_newlines(x))
  endif()
endfunction()
function(compile_rest)
  if(_37eq(has(setenv("target" toplevel ON) "value") "py"))
    return(PROPAGATE "*_args, **_keys")
  else()
    if(_37eq(has(setenv("target" toplevel ON) "value") "js"))
      return(PROPAGATE _37cat("..." compile("*args")))
    else()
      return(PROPAGATE "...")
    endif()
  endif()
endfunction()
function(compile_atom x raw63)
  if(_37eq(x "nil"))
    return(PROPAGATE compile_nil())
  else()
    if(_37eq(x "..."))
      return(PROPAGATE compile_rest())
    else()
      if(id_literal63(x))
        return(PROPAGATE inner(x))
      else()
        if(string_literal63(x))
          return(PROPAGATE compile_string(x))
        else()
          if(string63(x))
            return(PROPAGATE compile_id(x raw63))
          else()
            if(boolean63(x))
              return(PROPAGATE compile_boolean(x))
            else()
              if(nan63(x))
                return(PROPAGATE "nan")
              else()
                if(_37eq(x inf))
                  return(PROPAGATE "inf")
                else()
                  if(_37eq(x _inf))
                    return(PROPAGATE "-inf")
                  else()
                    if(number63(x))
                      return(PROPAGATE _37cat(x ""))
                    else()
                      error(_37cat("Cannot compile atom: " str(x)))
                    endif()
                  endif()
                endif()
              endif()
            endif()
          endif()
        endif()
      endif()
    endif()
  endif()
endfunction()
function(terminator stmt63)
  if(NOT stmt63)
    return(PROPAGATE "")
  else()
    if(_37eq(has(setenv("target" toplevel ON) "value") "js"))
      return(PROPAGATE ";\n")
    else()
      return(PROPAGATE "\n")
    endif()
  endif()
endfunction()
function(compile_special form stmt63)
  set(____id111 form)
  set(__x117 has(____id111 0))
  set(__args2 cut(____id111 1))
  set(____id12 getenv(__x117))
  set(__special has(____id12 "special"))
  set(__stmt has(____id12 "stmt"))
  set(__self_tr63 has(____id12 "tr"))
  set(__e72 "")
  if(stmt63 AND NOT __stmt)
    set(__e72 indentation())
  else()
    set(__e72 "")
  endif()
  set(__p "${__e72}")
  set(__tr terminator(stmt63 AND NOT __self_tr63))
  return(PROPAGATE _37cat(__p _37cat(apply(__special __args2) __tr)))
endfunction()
function(parenthesize_call63 x)
  return(PROPAGATE NOT atom63(x) AND _37eq(hd(x) "%function") OR precedence(x) GREATER 0)
endfunction()
function(method_call63 form)
  set(__e73 "")
  if(list63(form))
    set(__e73 hd(form))
  else()
    set(__e73 form)
  endif()
  set(__x118 "${__e73}")
  return(PROPAGATE string63(__x118) AND (_35(__x118 1) GREATER 1 AND _37eq(char(__x118 0) ".")))
endfunction()
function(compile_call form)
  set(__f hd(form))
  set(__f1 compile_name(__f))
  set(__args3 stash42(tl(form)))
  set(__e74 "")
  if(method_call63(hd(__args3)))
    set(__e74 mapcat(compile __args3 ""))
  else()
    set(__e74 compile_args(__args3))
  endif()
  set(__args4 "${__e74}")
  if(parenthesize_call63(__f))
    return(PROPAGATE _37cat("(" _37cat(__f1 _37cat(")" __args4))))
  else()
    return(PROPAGATE _37cat(__f1 __args4))
  endif()
endfunction()
function(op_delims parent child ...)
  set(____r77 unstash(...))
  set(__parent destash33(parent ____r77))
  set(__child destash33(child ____r77))
  set(____id13 ____r77)
  set(__right has(____id13 "right"))
  set(__e75 "")
  if(__right)
    set(__e75 _6261)
  else()
    set(__e75 _62)
  endif()
  if("${__e75}"(precedence(__child) precedence(__parent)))
    return(PROPAGATE "(" ")")
  else()
    return(PROPAGATE "" "")
  endif()
endfunction()
function(compile_infix form)
  set(____id14 form)
  set(__op has(____id14 0))
  set(____id15 cut(____id14 1))
  set(__a1 has(____id15 0))
  set(__b2 has(____id15 1))
  set(____id16 op_delims(form __a1))
  set(__ao has(____id16 0))
  set(__ac has(____id16 1))
  set(____id17 op_delims(form __b2 right ON))
  set(__bo has(____id17 0))
  set(__bc has(____id17 1))
  set(__a2 compile(__a1))
  set(__b3 compile(__b2))
  set(__op1 getop(__op))
  if(unary63(form))
    return(PROPAGATE _37cat(__op1 _37cat(__ao _37cat(" " _37cat(__a2 __ac)))))
  else()
    return(PROPAGATE _37cat(__ao _37cat(__a2 _37cat(__ac _37cat(" " _37cat(__op1 _37cat(" " _37cat(__bo _37cat(__b3 __bc)))))))))
  endif()
endfunction()
function(compile_body body)
  set(setenv("indent-level" toplevel ON).value has(setenv("indent-level" toplevel ON) "value") + 1)
  set(____x122 compile(body stmt ON))
  set(setenv("indent-level" toplevel ON).value has(setenv("indent-level" toplevel ON) "value") - 1)
  set(__s2 ____x122)
  if(_37eq(has(setenv("target" toplevel ON) "value") "py") AND none63(__s2))
    set(setenv("indent-level" toplevel ON).value has(setenv("indent-level" toplevel ON) "value") + 1)
    set(____x123 _37cat(indentation() "pass\n"))
    set(setenv("indent-level" toplevel ON).value has(setenv("indent-level" toplevel ON) "value") - 1)
    return(PROPAGATE ____x123)
  else()
    return(PROPAGATE __s2)
  endif()
endfunction()
function(compile_function args body ...)
  set(____r80 unstash(...))
  set(__args5 destash33(args ____r80))
  set(__body4 destash33(body ____r80))
  set(____id18 ____r80)
  set(__name3 has(____id18 "name"))
  set(__prefix has(____id18 "prefix"))
  set(__async has(____id18 "async"))
  set(__e76 "")
  if(__name3)
    set(__e76 compile_name(__name3))
  else()
    set(__e76 "")
  endif()
  set(__id19 "${__e76}")
  set(__e77 "")
  if(has(__args5 "rest"))
    set(__e77 join(__args5 "..."))
  else()
    set(__e77 __args5)
  endif()
  set(__args12 "${__e77}")
  set(__e78 "")
  if(_37eq(has(setenv("target" toplevel ON) "value") "cmake"))
    set(__e78 compile_args(join("%literal" __id19 __args12) ON))
  else()
    set(__e78 compile_args(__args12 ON))
  endif()
  set(__args6 "${__e78}")
  set(__body5 compile_body(__body4))
  set(__ind indentation())
  set(__e79 "")
  if(__prefix)
    set(__e79 _37cat(__prefix " "))
  else()
    set(__e79 "")
  endif()
  set(__p1 "${__e79}")
  set(__e80 "")
  if(_37eq(has(setenv("target" toplevel ON) "value") "js"))
    set(__e80 "")
  else()
    set(__e81 "")
    if(_37eq(has(setenv("target" toplevel ON) "value") "cmake"))
      set(__e81 "endfunction()")
    else()
      set(__e81 "end")
    endif()
    set(__e80 "${__e81}")
  endif()
  set(__tr1 "${__e80}")
  set(__e82 "")
  if(__async AND NOT( _37eq(has(setenv("target" toplevel ON) "value") "lua")))
    set(__e82 "async ")
  else()
    set(__e82 "")
  endif()
  set(__a3 "${__e82}")
  if(__name3)
    set(__tr1 _37cat(__tr1 "\n"))
  endif()
  if(_37eq(has(setenv("target" toplevel ON) "value") "js"))
    return(PROPAGATE _37cat(__a3 _37cat("function " _37cat(__id19 _37cat(__args6 _37cat(" {\n" _37cat(__body5 _37cat(__ind _37cat("}" __tr1)))))))))
  else()
    if(_37eq(has(setenv("target" toplevel ON) "value") "py"))
      set(__e83 "")
      if(none63(__ind))
        set(__e83 "\n")
      else()
        set(__e83 "")
      endif()
      set(__ws "${__e83}")
      return(PROPAGATE _37cat(__a3 _37cat("def " _37cat(__id19 _37cat(__args6 _37cat(":\n" _37cat(__body5 __ws)))))))
    else()
      if(_37eq(has(setenv("target" toplevel ON) "value") "cmake"))
        return(PROPAGATE _37cat(__a3 _37cat("function" _37cat(__args6 _37cat("\n" _37cat(__body5 _37cat(__ind __tr1)))))))
      else()
        return(PROPAGATE _37cat(__p1 _37cat("function " _37cat(__id19 _37cat(__args6 _37cat("\n" _37cat(__body5 _37cat(__ind __tr1))))))))
      endif()
    endif()
  endif()
endfunction()
function(can_return63 form)
  return(PROPAGATE is63(form) AND (atom63(form) OR NOT( _37eq(hd(form) "%return")) AND NOT statement63(hd(form))))
endfunction()
function(compile form raw63 ...)
  set(____r82 unstash(...))
  set(__form destash33(form ____r82))
  set(__raw63 destash33(raw63 ____r82))
  set(____id20 ____r82)
  set(__stmt1 has(____id20 "stmt"))
  if(nil63(__form))
    return(PROPAGATE "")
  else()
    if(special_form63(__form))
      return(PROPAGATE compile_special(__form __stmt1))
    else()
      set(__tr2 terminator(__stmt1))
      set(__e84 "")
      if(__stmt1)
        set(__e84 indentation())
      else()
        set(__e84 "")
      endif()
      set(__ind1 "${__e84}")
      set(__e85 "")
      if(atom63(__form))
        set(__e85 compile_atom(__form __raw63))
      else()
        set(__e86 "")
        if(infix63(hd(__form)))
          set(__e86 compile_infix(__form))
        else()
          set(__e86 compile_call(__form))
        endif()
        set(__e85 "${__e86}")
      endif()
      set(__form1 "${__e85}")
      return(PROPAGATE _37cat(__ind1 _37cat(__form1 __tr2)))
    endif()
  endif()
endfunction()
function(lower_statement form tail63)
  set(__hoist )
  set(__e lower(form __hoist ON tail63))
  set(__e87 "")
  if(some63(__hoist) AND is63(__e))
    set(__e87 join("%do" __hoist __e))
  else()
    set(__e88 "")
    if(is63(__e))
      set(__e88 __e)
    else()
      set(__e89 "")
      if(_35(__hoist) GREATER 1)
        set(__e89 join("%do" __hoist))
      else()
        set(__e89 hd(__hoist))
      endif()
      set(__e88 "${__e89}")
    endif()
    set(__e87 "${__e88}")
  endif()
  return(PROPAGATE either("${__e87}" "%do"))
endfunction()
function(lower_body body tail63)
  return(PROPAGATE lower_statement(join("%do" body) tail63))
endfunction()
function(literal63 form)
  return(PROPAGATE atom63(form) OR (_37eq(hd(form) "%array") OR (_37eq(hd(form) "%object") OR (_37eq(hd(form) "%list") OR _37eq(hd(form) ",")))))
endfunction()
function(standalone63 form)
  return(PROPAGATE NOT( _37eq(has(setenv("target" toplevel ON) "value") "lua")) AND string_literal63(form) OR (NOT atom63(form) AND (NOT infix63(hd(form)) AND (NOT literal63(form) AND NOT( _37eq("%get" hd(form))))) OR id_literal63(form)))
endfunction()
function(lower_do args hoist stmt63 tail63)
  set(____x134 almost(args))
  set(____i19 0)
  while(____i19 LESS _35(____x134))
    set(__x135 ____x134[____i19])
    set(____y lower(__x135 hoist stmt63))
    if(yes(____y))
      set(__e1 ____y)
      if(standalone63(__e1))
        add(hoist __e1)
      endif()
    endif()
    set(____i19 ____i19 + 1)
  endwhile()
  set(__e2 lower(last(args) hoist stmt63 tail63))
  if(tail63 AND can_return63(__e2))
    return(PROPAGATE "%return" __e2)
  else()
    return(PROPAGATE __e2)
  endif()
endfunction()
function(lower_set args hoist stmt63 tail63)
  set(____id21 args)
  set(__lh has(____id21 0))
  set(__rh has(____id21 1))
  set(__lh1 lower(__lh hoist))
  set(__rh1 lower(__rh hoist))
  add(hoist "%set" __lh1 __rh1)
  if(NOT( stmt63 AND NOT tail63 OR OFF))
    return(PROPAGATE __lh1)
  endif()
endfunction()
function(lower_if args hoist stmt63 tail63)
  set(____id22 args)
  set(__cond has(____id22 0))
  set(__then has(____id22 1))
  set(__else has(____id22 2))
  if(stmt63)
    set(__e91 "")
    if(is63(__else))
      set(__e91 lower_body(__else tail63))
    endif()
    return(PROPAGATE add(hoist join("%if" lower(__cond hoist) lower_body(__then tail63) "${__e91}")))
  else()
    set(__e3 unique("e"))
    add(hoist "%local" __e3 "nil")
    set(__e90 "")
    if(is63(__else))
      set(__e90 lower("%set" __e3 __else))
    endif()
    add(hoist join("%if" lower(__cond hoist) lower("%set" __e3 __then) "${__e90}"))
    if(_37eq(has(setenv("target" toplevel ON) "value") "cmake"))
      return(PROPAGATE "%id" __e3)
    else()
      return(PROPAGATE __e3)
    endif()
  endif()
endfunction()
function(lower_short x args hoist)
  set(____id23 args)
  set(__a4 has(____id23 0))
  set(__b4 has(____id23 1))
  set(__hoist1 )
  set(__b11 lower(__b4 __hoist1))
  if(some63(__hoist1))
    set(__id24 unique("id"))
    set(__e92 "")
    if(_37eq(x "%and"))
      set(__e92 "%if" __id24 __b4 __id24)
    else()
      set(__e92 "%if" __id24 __id24 __b4)
    endif()
    return(PROPAGATE lower("%do" "%local" __id24 __a4 "${__e92}" hoist))
  else()
    return(PROPAGATE x lower(__a4 hoist) __b11)
  endif()
endfunction()
function(lower_try args hoist tail63)
  return(PROPAGATE add(hoist "%try" lower_body(args tail63)))
endfunction()
function(lower_while args hoist)
  set(____id25 args)
  set(__c4 has(____id25 0))
  set(__body6 cut(____id25 1))
  set(__pre1 )
  set(__c5 lower(__c4 __pre1))
  set(__e93 "")
  if(none63(__pre1))
    set(__e93 "%while" __c5 lower_body(__body6))
  else()
    set(__e93 "%while" ON join("%do" __pre1 "%if" "%not" __c5 "%break" lower_body(__body6)))
  endif()
  return(PROPAGATE add(hoist "${__e93}"))
endfunction()
function(lower_for args hoist)
  set(____id26 args)
  set(__h has(____id26 0))
  set(__k17 has(____id26 1))
  set(__body7 cut(____id26 2))
  return(PROPAGATE add(hoist join("%for" lower(__h hoist) __k17 lower_body(__body7) props(__body7))))
endfunction()
function(lower_with args hoist stmt63 tail63)
  set(____id27 args)
  set(__h1 has(____id27 0))
  set(__body8 cut(____id27 1))
  if(stmt63 AND NOT tail63)
    return(PROPAGATE add(hoist join("%with" lower(__h1 hoist) lower_body(__body8 tail63) props(__body8))))
  else()
    set(__e4 unique("e"))
    add(hoist "%local" __e4)
    add(hoist join("%with" lower(__h1 hoist) lower("%set" __e4 join("%do" __body8)) props(__body8)))
    return(PROPAGATE __e4)
  endif()
endfunction()
function(lower_block kind args hoist stmt63 tail63)
  set(____id28 args)
  set(__name4 has(____id28 0))
  set(__h2 has(____id28 1))
  set(__body9 cut(____id28 2))
  return(PROPAGATE add(hoist kind __name4 lower(__h2 hoist) lower_body(__body9 tail63)))
endfunction()
function(lower_from args hoist stmt63 tail63)
  set(____id29 args)
  set(__name5 has(____id29 0))
  set(__import_ has(____id29 1))
  set(__id30 has(____id29 2))
  set(__as_ has(____id29 3))
  set(__alias has(____id29 4))
  add(hoist join("from" args))
  return(PROPAGATE __alias OR __id30)
endfunction()
function(lower_import __x169 hoist stmt63 tail63)
  set(____id31 __x169)
  set(__name6 has(____id31 0))
  set(__alias1 cut(____id31 1))
  set(__e94 "")
  if(_37eq(hd(__alias1) "as"))
    set(__e94 __alias1[1])
  else()
    set(__e94 hd(__alias1))
  endif()
  set(__as "${__e94}")
  set(__id32 __as OR __name6)
  add(hoist join("import" __name6 __alias1))
  if(NOT stmt63)
    return(PROPAGATE __id32)
  endif()
endfunction()
function(lower_function args hoist)
  if(_37eq(has(setenv("target" toplevel ON) "value") "py") OR _37eq(has(setenv("target" toplevel ON) "value") "cmake"))
    set(__f11 unique("f"))
    return(PROPAGATE lower("%do" join("%local-function" __f11 args) __f11 hoist))
  else()
    set(____id33 args)
    set(__a5 has(____id33 0))
    set(__body10 cut(____id33 1))
    return(PROPAGATE join("%function" __a5 lower_body(__body10 ON) props(__body10)))
  endif()
endfunction()
function(lower_definition kind args hoist)
  set(____id34 args)
  set(__name7 has(____id34 0))
  set(__args7 has(____id34 1))
  set(__body11 cut(____id34 2))
  return(PROPAGATE add(hoist join(kind __name7 __args7 lower_body(__body11 ON) props(__body11))))
endfunction()
function(lower_call form hoist)
  function(__f6 x)
    return(PROPAGATE lower(x hoist))
  endfunction()
  set(__form2 map(__f6 form))
  if(some63(__form2))
    return(PROPAGATE __form2)
  endif()
endfunction()
function(pairwise63 form)
  return(PROPAGATE in63(hd(form) "%lt" "%le" "%eq" "%ge" "%gt"))
endfunction()
function(lower_pairwise form)
  if(pairwise63(form))
    set(__e5 )
    set(____id35 form)
    set(__x176 has(____id35 0))
    set(__args8 cut(____id35 1))
    function(__f7 a b)
      add(__e5 __x176 a b)
      return(PROPAGATE a)
    endfunction()
    reduce(__f7 __args8)
    return(PROPAGATE join("%and" reverse(__e5)))
  else()
    return(PROPAGATE form)
  endif()
endfunction()
function(lower_infix63 form)
  return(PROPAGATE infix63(hd(form)) AND _35(form) GREATER 3)
endfunction()
function(lower_infix form hoist)
  set(__form3 lower_pairwise(form))
  set(____id36 __form3)
  set(__x179 has(____id36 0))
  set(__args9 cut(____id36 1))
  function(__f8 a b)
    return(PROPAGATE __x179 b a)
  endfunction()
  return(PROPAGATE lower(reduce(__f8 reverse(__args9)) hoist))
endfunction()
function(lower_special form hoist)
  set(__e6 lower_call(form hoist))
  if(__e6)
    return(PROPAGATE add(hoist __e6))
  endif()
endfunction()
function(lower form hoist stmt63 tail63)
  if(atom63(form))
    return(PROPAGATE form)
  else()
    if(empty63(form))
      return(PROPAGATE "%array")
    else()
      if(nil63(hoist))
        return(PROPAGATE lower_statement(form))
      else()
        if(lower_infix63(form))
          return(PROPAGATE lower_infix(form hoist))
        else()
          set(____id37 form)
          set(__x182 has(____id37 0))
          set(__args10 cut(____id37 1))
          if(_37eq(__x182 "%do"))
            return(PROPAGATE lower_do(__args10 hoist stmt63 tail63))
          else()
            if(_37eq(__x182 "%call"))
              return(PROPAGATE lower(__args10 hoist stmt63 tail63))
            else()
              if(_37eq(__x182 "%set"))
                return(PROPAGATE lower_set(__args10 hoist stmt63 tail63))
              else()
                if(_37eq(__x182 "%if"))
                  return(PROPAGATE lower_if(__args10 hoist stmt63 tail63))
                else()
                  if(_37eq(__x182 "%try"))
                    return(PROPAGATE lower_try(__args10 hoist tail63))
                  else()
                    if(_37eq(__x182 "%while"))
                      return(PROPAGATE lower_while(__args10 hoist))
                    else()
                      if(_37eq(__x182 "%for"))
                        return(PROPAGATE lower_for(__args10 hoist))
                      else()
                        if(_37eq(__x182 "%with"))
                          return(PROPAGATE lower_with(__args10 hoist stmt63 tail63))
                        else()
                          if(_37eq(__x182 "%block"))
                            return(PROPAGATE lower_block("%block" __args10 hoist stmt63 tail63))
                          else()
                            if(_37eq(__x182 "%cases"))
                              return(PROPAGATE lower_cases(__args10 hoist stmt63 tail63))
                            else()
                              if(_37eq(__x182 "import"))
                                return(PROPAGATE lower_import(__args10 hoist stmt63 tail63))
                              else()
                                if(_37eq(__x182 "from"))
                                  return(PROPAGATE lower_from(__args10 hoist stmt63 tail63))
                                else()
                                  if(_37eq(__x182 "%function"))
                                    return(PROPAGATE lower_function(__args10 hoist))
                                  else()
                                    if(_37eq(__x182 "%local-function") OR _37eq(__x182 "%global-function"))
                                      return(PROPAGATE lower_definition(__x182 __args10 hoist))
                                    else()
                                      if(in63(__x182 "%and" "%or"))
                                        return(PROPAGATE lower_short(__x182 __args10 hoist))
                                      else()
                                        if(statement63(__x182))
                                          return(PROPAGATE lower_special(form hoist))
                                        else()
                                          return(PROPAGATE lower_call(form hoist))
                                        endif()
                                      endif()
                                    endif()
                                  endif()
                                endif()
                              endif()
                            endif()
                          endif()
                        endif()
                      endif()
                    endif()
                  endif()
                endif()
              endif()
            endif()
          endif()
        endif()
      endif()
    endif()
  endif()
endfunction()
function(expand form)
  return(PROPAGATE lower(macroexpand(form)))
endfunction()
function(eval_result globals locals)
  return(PROPAGATE lumen_result)
endfunction()
function(eval form globals locals)
  set(__previous has(setenv("target" toplevel ON) "value"))
  set(setenv("target" toplevel ON).value "cmake")
  set(__code compile(expand("%set" "lumen-result" form)))
  set(setenv("target" toplevel ON).value __previous)
  run(__code globals locals)
  return(PROPAGATE eval_result(globals locals))
endfunction()
function(immediate_call63 x)
  return(PROPAGATE NOT atom63(x) AND (NOT atom63(hd(x)) AND _37eq(hd(hd(x)) "%function")))
endfunction()
function(___37do__special ...)
  set(__forms2 unstash(...))
  set(__s4 "")
  set(____x189 __forms2)
  set(____i21 0)
  while(____i21 LESS _35(____x189))
    set(__x190 ____x189[____i21])
    if(_37eq(has(setenv("target" toplevel ON) "value") "lua") AND (immediate_call63(__x190) AND _37eq("\n" char(__s4 edge(__s4)))))
      set(__s4 _37cat(clip(__s4 0 edge(__s4)) ";\n"))
    endif()
    set(__s4 _37cat(__s4 compile(__x190 stmt ON)))
    if(NOT atom63(__x190))
      if(_37eq(hd(__x190) "%return") OR _37eq(hd(__x190) "%break"))
        break()
      endif()
    endif()
    set(____i21 ____i21 + 1)
  endwhile()
  return(PROPAGATE __s4)
endfunction()
setenv("%do" special ___37do__special stmt ON tr ON)
function(___37cmake_block__special body)
  set(__ind3 indentation())
  set(__s6 "")
  set(__s6 _37cat(__s6 _37cat(__ind3 "block(SCOPE_FOR VARIABLES)\n")))
  set(__s6 _37cat(__s6 compile_body(body)))
  set(__s6 _37cat(__s6 _37cat(__ind3 "endblock()\n")))
  return(PROPAGATE __s6)
endfunction()
setenv("%cmake-block" special ___37cmake_block__special stmt ON tr ON)
function(___37if__special cond cons alt)
  set(__cond2 compile(cond))
  set(__cons1 compile_body(cons))
  set(__e95 "")
  if(alt)
    set(__e95 compile_body(alt))
  endif()
  set(__alt1 "${__e95}")
  set(__ind5 indentation())
  set(__s8 "")
  if(_37eq(has(setenv("target" toplevel ON) "value") "js"))
    set(__s8 _37cat(__s8 _37cat(__ind5 _37cat("if (" _37cat(__cond2 _37cat(") {\n" _37cat(__cons1 _37cat(__ind5 "}"))))))))
  else()
    if(_37eq(has(setenv("target" toplevel ON) "value") "py"))
      set(__s8 _37cat(__s8 _37cat(__ind5 _37cat("if " _37cat(__cond2 _37cat(":\n" __cons1))))))
    else()
      if(_37eq(has(setenv("target" toplevel ON) "value") "cmake"))
        set(__s8 _37cat(__s8 _37cat(__ind5 _37cat("if(" _37cat(__cond2 _37cat(")\n" __cons1))))))
      else()
        set(__s8 _37cat(__s8 _37cat(__ind5 _37cat("if " _37cat(__cond2 _37cat(" then\n" __cons1))))))
      endif()
    endif()
  endif()
  if(__alt1 AND _37eq(has(setenv("target" toplevel ON) "value") "js"))
    set(__s8 _37cat(__s8 _37cat(" else {\n" _37cat(__alt1 _37cat(__ind5 "}")))))
  else()
    if(__alt1 AND _37eq(has(setenv("target" toplevel ON) "value") "py"))
      set(__s8 _37cat(__s8 _37cat(__ind5 _37cat("else:\n" __alt1))))
    else()
      if(__alt1 AND _37eq(has(setenv("target" toplevel ON) "value") "cmake"))
        set(__s8 _37cat(__s8 _37cat(__ind5 _37cat("else()\n" __alt1))))
      else()
        if(__alt1)
          set(__s8 _37cat(__s8 _37cat(__ind5 _37cat("else\n" __alt1))))
        endif()
      endif()
    endif()
  endif()
  if(_37eq(has(setenv("target" toplevel ON) "value") "lua"))
    return(PROPAGATE _37cat(__s8 _37cat(__ind5 "end\n")))
  else()
    if(_37eq(has(setenv("target" toplevel ON) "value") "js"))
      return(PROPAGATE _37cat(__s8 "\n"))
    else()
      if(_37eq(has(setenv("target" toplevel ON) "value") "cmake"))
        return(PROPAGATE _37cat(__s8 _37cat(__ind5 "endif()\n")))
      else()
        return(PROPAGATE __s8)
      endif()
    endif()
  endif()
endfunction()
setenv("%if" special ___37if__special stmt ON tr ON)
function(___37while__special cond form)
  set(__cond4 compile(cond))
  set(__body13 compile_body(form))
  set(__ind7 indentation())
  if(_37eq(has(setenv("target" toplevel ON) "value") "js"))
    return(PROPAGATE _37cat(__ind7 _37cat("while (" _37cat(__cond4 _37cat(") {\n" _37cat(__body13 _37cat(__ind7 "}\n")))))))
  else()
    if(_37eq(has(setenv("target" toplevel ON) "value") "py"))
      return(PROPAGATE _37cat(__ind7 _37cat("while " _37cat(__cond4 _37cat(":\n" __body13)))))
    else()
      if(_37eq(has(setenv("target" toplevel ON) "value") "cmake"))
        return(PROPAGATE _37cat(__ind7 _37cat("while(" _37cat(__cond4 _37cat(")\n" _37cat(__body13 _37cat(__ind7 "endwhile()\n")))))))
      else()
        return(PROPAGATE _37cat(__ind7 _37cat("while " _37cat(__cond4 _37cat(" do\n" _37cat(__body13 _37cat(__ind7 "end\n")))))))
      endif()
    endif()
  endif()
endfunction()
setenv("%while" special ___37while__special stmt ON tr ON)
function(___37for__special t k form ...)
  set(____r121 unstash(...))
  set(__t2 destash33(t ____r121))
  set(__k20 destash33(k ____r121))
  set(__form5 destash33(form ____r121))
  set(____id39 ____r121)
  set(__async2 has(____id39 "async"))
  set(__t3 compile(__t2))
  set(__k21 compile(__k20))
  set(__ind9 indentation())
  set(__body15 compile_body(__form5))
  set(__e96 "")
  if(__async2)
    set(__e96 "async ")
  else()
    set(__e96 "")
  endif()
  set(__a7 "${__e96}")
  if(_37eq(has(setenv("target" toplevel ON) "value") "lua"))
    return(PROPAGATE _37cat(__ind9 _37cat("for " _37cat(__k21 _37cat(" in next, " _37cat(__t3 _37cat(" do\n" _37cat(__body15 _37cat(__ind9 "end\n")))))))))
  else()
    if(_37eq(has(setenv("target" toplevel ON) "value") "py"))
      return(PROPAGATE _37cat(__ind9 _37cat(__a7 _37cat("for " _37cat(__k21 _37cat(" in " _37cat(__t3 _37cat(":\n" __body15))))))))
    else()
      return(PROPAGATE _37cat(__ind9 _37cat("for (" _37cat(__k21 _37cat(" in " _37cat(__t3 _37cat(") {\n" _37cat(__body15 _37cat(__ind9 "}\n")))))))))
    endif()
  endif()
endfunction()
setenv("%for" special ___37for__special stmt ON tr ON)
function(___37with__special t form ...)
  set(____r123 unstash(...))
  set(__t6 destash33(t ____r123))
  set(__form7 destash33(form ____r123))
  set(____id41 ____r123)
  set(__async4 has(____id41 "async"))
  set(__t7 compile(__t6))
  set(__ind11 indentation())
  set(__body17 compile_body(__form7))
  set(__e97 "")
  if(__async4)
    set(__e97 "async ")
  else()
    set(__e97 "")
  endif()
  set(__a9 "${__e97}")
  if(_37eq(has(setenv("target" toplevel ON) "value") "py"))
    return(PROPAGATE _37cat(__ind11 _37cat(__a9 _37cat("with " _37cat(__t7 _37cat(":\n" __body17))))))
  else()
    return(PROPAGATE "")
  endif()
endfunction()
setenv("%with" special ___37with__special stmt ON tr ON)
function(___37block__special name t form)
  set(__t9 compile(t))
  set(__ind13 indentation())
  set(__body19 compile_body(form))
  set(__e98 "")
  if(some63(__t9))
    set(__e98 " ")
  else()
    set(__e98 "")
  endif()
  set(__sep1 "${__e98}")
  set(__e99 "")
  if(some63(__t9))
    set(__e99 "(")
  else()
    set(__e99 "")
  endif()
  set(__lh2 "${__e99}")
  set(__e100 "")
  if(some63(__t9))
    set(__e100 ")")
  else()
    set(__e100 "")
  endif()
  set(__rh2 "${__e100}")
  if(_37eq(has(setenv("target" toplevel ON) "value") "py"))
    return(PROPAGATE _37cat(__ind13 _37cat(name _37cat(__sep1 _37cat(__t9 _37cat(":\n" __body19))))))
  else()
    return(PROPAGATE _37cat(__ind13 _37cat(name _37cat(__sep1 _37cat(__lh2 _37cat(__t9 _37cat(__rh2 _37cat(__sep1 _37cat("{\n" _37cat(__body19 _37cat(__ind13 "}\n")))))))))))
  endif()
endfunction()
setenv("%block" special ___37block__special stmt ON tr ON)
function(___37try__special form)
  set(__ind15 indentation())
  set(__body21 compile_body(form))
  set(__e101 "")
  if(_37eq(has(setenv("target" toplevel ON) "value") "py"))
    set(__e101 "%do" "import" "sys" "%local" "e" "%idx" "sys" "exc_info" "%return" "%array" OFF "%get" "e" 1 "e")
  else()
    set(__e101 "%return" "%array" OFF "e")
  endif()
  set(__hf1 "${__e101}")
  set(setenv("indent-level" toplevel ON).value has(setenv("indent-level" toplevel ON) "value") + 1)
  set(____x216 compile(__hf1 stmt ON))
  set(setenv("indent-level" toplevel ON).value has(setenv("indent-level" toplevel ON) "value") - 1)
  set(__h4 ____x216)
  if(_37eq(has(setenv("target" toplevel ON) "value") "js"))
    return(PROPAGATE _37cat(__ind15 _37cat("try {\n" _37cat(__body21 _37cat(__ind15 _37cat("}\n" _37cat(__ind15 _37cat("catch (e) {\n" _37cat(__h4 _37cat(__ind15 "}\n"))))))))))
  else()
    return(PROPAGATE _37cat(__ind15 _37cat("try:\n" _37cat(__body21 _37cat(__ind15 _37cat("except:\n" __h4))))))
  endif()
endfunction()
setenv("%try" special ___37try__special stmt ON tr ON)
function(___37delete__special place)
  set(__e102 "")
  if(_37eq(has(setenv("target" toplevel ON) "value") "py"))
    set(__e102 "del ")
  else()
    set(__e102 "delete ")
  endif()
  return(PROPAGATE _37cat(indentation() _37cat("${__e102}" compile(place))))
endfunction()
setenv("%delete" special ___37delete__special stmt ON)
function(___37break__special)
  set(__e103 "")
  if(_37eq(has(setenv("target" toplevel ON) "value") "cmake"))
    set(__e103 "()")
  else()
    set(__e103 "")
  endif()
  return(PROPAGATE _37cat(indentation() _37cat("break" "${__e103}")))
endfunction()
setenv("%break" special ___37break__special stmt ON)
function(___37function__special args ...)
  set(____r133 unstash(...))
  set(__args121 destash33(args ____r133))
  set(____id43 ____r133)
  set(__body23 cut(____id43 0))
  return(PROPAGATE apply(compile_function join(__args121 __body23 )))
endfunction()
setenv("%function" special ___37function__special)
function(___37global_function__special name args ...)
  set(____r135 unstash(...))
  set(__name9 destash33(name ____r135))
  set(__args14 destash33(args ____r135))
  set(____id45 ____r135)
  set(__body25 cut(____id45 0))
  if(_37eq(has(setenv("target" toplevel ON) "value") "lua") OR (_37eq(has(setenv("target" toplevel ON) "value") "py") OR _37eq(has(setenv("target" toplevel ON) "value") "cmake")))
    set(____x231 object(__args14))
    set(____x231.name __name9)
    set(____x232 object())
    set(____x232.name __name9)
    set(__x230 apply(compile_function join(____x231 __body25 ____x232)))
    return(PROPAGATE _37cat(indentation() __x230))
  else()
    return(PROPAGATE compile("%set" __name9 join("%function" __args14 __body25) stmt ON))
  endif()
endfunction()
setenv("%global-function" special ___37global_function__special stmt ON tr ON)
function(___37local_function__special name args ...)
  set(____r137 unstash(...))
  set(__name11 destash33(name ____r137))
  set(__args16 destash33(args ____r137))
  set(____id47 ____r137)
  set(__body27 cut(____id47 0))
  if(_37eq(has(setenv("target" toplevel ON) "value") "lua") OR (_37eq(has(setenv("target" toplevel ON) "value") "py") OR _37eq(has(setenv("target" toplevel ON) "value") "cmake")))
    set(____x243 object(__args16))
    set(____x243.name __name11)
    set(____x243.prefix "local")
    set(____x244 object())
    set(____x244.name __name11)
    set(____x244.prefix "local")
    set(__x242 apply(compile_function join(____x243 __body27 ____x244)))
    return(PROPAGATE _37cat(indentation() __x242))
  else()
    return(PROPAGATE compile("%local" __name11 join("%function" __args16 __body27) stmt ON))
  endif()
endfunction()
setenv("%local-function" special ___37local_function__special stmt ON tr ON)
function(___37ref__special variable)
  return(PROPAGATE _37cat("${" _37cat(compile_id(tostr(variable)) "}")))
endfunction()
setenv("%ref" special ___37ref__special)
function(___37id__special variable)
  return(PROPAGATE escape(compile("%ref" variable)))
endfunction()
setenv("%id" special ___37id__special)
function(___37return__special x)
  set(__e104 "")
  if(_37eq(has(setenv("target" toplevel ON) "value") "cmake"))
    set(__e106 "")
    if(nil63(x))
      set(__e106 "return")
    else()
      set(__e106 "return" "PROPAGATE" x)
    endif()
    set(__e104 compile("${__e106}"))
  else()
    set(__e105 "")
    if(nil63(x))
      set(__e105 "return")
    else()
      set(__e105 _37cat("return " compile(x)))
    endif()
    set(__e104 "${__e105}")
  endif()
  return(PROPAGATE _37cat(indentation() "${__e104}"))
endfunction()
setenv("%return" special ___37return__special stmt ON)
function(___37new__special x)
  return(PROPAGATE _37cat("new " compile(x)))
endfunction()
setenv("%new" special ___37new__special)
function(___37typeof__special x)
  return(PROPAGATE _37cat("typeof(" _37cat(compile(x) ")")))
endfunction()
setenv("%typeof" special ___37typeof__special)
function(___37error__special x)
  set(__e107 "")
  if(_37eq(has(setenv("target" toplevel ON) "value") "js"))
    set(__e107 _37cat("throw " compile("%new" "Error" x)))
  else()
    set(__e108 "")
    if(_37eq(has(setenv("target" toplevel ON) "value") "py"))
      set(__e108 _37cat("raise " compile("Exception" x)))
    else()
      set(__e108 _37cat("error(" _37cat(compile(x) ")")))
    endif()
    set(__e107 "${__e108}")
  endif()
  set(__e22 "${__e107}")
  return(PROPAGATE _37cat(indentation() __e22))
endfunction()
setenv("%error" special ___37error__special stmt ON)
function(___37throw__special x)
  set(__e109 "")
  if(_37eq(has(setenv("target" toplevel ON) "value") "js"))
    set(__e109 _37cat("throw " compile(x)))
  else()
    set(__e110 "")
    if(_37eq(has(setenv("target" toplevel ON) "value") "py"))
      set(__e110 _37cat("raise " compile(x)))
    else()
      set(__e110 _37cat("error(" _37cat(compile(x) ")")))
    endif()
    set(__e109 "${__e110}")
  endif()
  set(__e26 "${__e109}")
  return(PROPAGATE _37cat(indentation() __e26))
endfunction()
setenv("%throw" special ___37throw__special stmt ON)
function(___37local__special name value)
  if(_37eq(has(setenv("target" toplevel ON) "value") "cmake"))
    return(PROPAGATE compile("%set" name value))
  endif()
  if(nil63(value) AND _37eq(has(setenv("target" toplevel ON) "value") "py"))
    set(value "nil")
  endif()
  set(__id49 compile(name))
  set(__value11 compile(value))
  set(__e111 "")
  if(is63(value))
    set(__e111 _37cat(" = " __value11))
  else()
    set(__e111 "")
  endif()
  set(__rh4 "${__e111}")
  set(__e112 "")
  if(_37eq(has(setenv("target" toplevel ON) "value") "js"))
    set(__e112 "var ")
  else()
    set(__e113 "")
    if(_37eq(has(setenv("target" toplevel ON) "value") "lua"))
      set(__e113 "local ")
    else()
      set(__e113 "")
    endif()
    set(__e112 "${__e113}")
  endif()
  set(__keyword1 "${__e112}")
  set(__ind17 indentation())
  return(PROPAGATE _37cat(__ind17 _37cat(__keyword1 _37cat(__id49 __rh4))))
endfunction()
setenv("%local" special ___37local__special stmt ON)
function(___37set__special lh rh)
  set(__lh4 compile(lh))
  set(__e114 "")
  if(nil63(rh))
    set(__e114 "nil")
  else()
    set(__e114 rh)
  endif()
  set(__rh6 compile("${__e114}"))
  set(__ind19 indentation())
  if(_37eq(has(setenv("target" toplevel ON) "value") "cmake"))
    return(PROPAGATE _37cat(indentation() _37cat("set(" _37cat(__lh4 _37cat(" " _37cat(__rh6 ")"))))))
  else()
    return(PROPAGATE _37cat(indentation() _37cat(__lh4 _37cat(" = " __rh6))))
  endif()
endfunction()
setenv("%set" special ___37set__special stmt ON)
function(___37get__special t k)
  set(__t12 compile(t))
  set(__k121 compile(k))
  if(_37eq(has(setenv("target" toplevel ON) "value") "lua") AND _37eq(char(__t12 0) "{") OR infix_operator63(t))
    set(__t12 _37cat("(" _37cat(__t12 ")")))
  endif()
  if(string_literal63(k) AND (valid_id63(inner(k)) AND NOT( _37eq(has(setenv("target" toplevel ON) "value") "py"))))
    return(PROPAGATE _37cat(__t12 _37cat("." inner(k))))
  else()
    return(PROPAGATE _37cat(__t12 _37cat("[" _37cat(__k121 "]"))))
  endif()
endfunction()
setenv("%get" special ___37get__special)
function(___37idx__special t k)
  set(__t14 compile(t))
  set(__k141 compile(k "raw"))
  if(_37eq(has(setenv("target" toplevel ON) "value") "lua") AND _37eq(char(__t14 0) "{") OR infix_operator63(t))
    set(__t14 _37cat("(" _37cat(__t14 ")")))
  endif()
  return(PROPAGATE _37cat(__t14 _37cat("." __k141)))
endfunction()
setenv("%idx" special ___37idx__special)
function(___37array__special ...)
  set(__forms4 unstash(...))
  if(_37eq(has(setenv("target" toplevel ON) "value") "cmake"))
    return(PROPAGATE mapcat(compile __forms4 " "))
  else()
    set(__e115 "")
    if(_37eq(has(setenv("target" toplevel ON) "value") "lua"))
      set(__e115 "{")
    else()
      set(__e115 "[")
    endif()
    set(__open1 "${__e115}")
    set(__e116 "")
    if(_37eq(has(setenv("target" toplevel ON) "value") "lua"))
      set(__e116 "}")
    else()
      set(__e116 "]")
    endif()
    set(__close1 "${__e116}")
    set(__s10 "")
    set(__c7 "")
    set(____o12 __forms4)
    set(__k24 "")
    for (__k24 in ____o12) {
      set(__v11 ____o12[__k24])
      set(__e117 "")
      if(numeric63(__k24))
        set(__e117 parseInt(__k24))
      else()
        set(__e117 __k24)
      endif()
      set(__k25 "${__e117}")
      if(number63(__k25))
        set(__s10 _37cat(__s10 _37cat(__c7 compile(__v11))))
        set(__c7 ", ")
      endif()
    }
    return(PROPAGATE _37cat(__open1 _37cat(__s10 __close1)))
  endif()
endfunction()
setenv("%array" special ___37array__special)
function(___37object__special ...)
  set(__forms6 unstash(...))
  set(__e118 "")
  if(_37eq(has(setenv("target" toplevel ON) "value") "cmake"))
    set(__e118 "")
  else()
    set(__e118 "{")
  endif()
  set(__s12 "${__e118}")
  set(__c9 "")
  set(__e119 "")
  if(_37eq(has(setenv("target" toplevel ON) "value") "lua"))
    set(__e119 " = ")
  else()
    set(__e120 "")
    if(_37eq(has(setenv("target" toplevel ON) "value") "cmake"))
      set(__e120 " ")
    else()
      set(__e120 ": ")
    endif()
    set(__e119 "${__e120}")
  endif()
  set(__sep3 "${__e119}")
  set(setenv("indent-level" toplevel ON).value has(setenv("indent-level" toplevel ON) "value") + 1)
  set(____x268 indentation())
  set(setenv("indent-level" toplevel ON).value has(setenv("indent-level" toplevel ON) "value") - 1)
  set(__ind21 ____x268)
  set(__e121 "")
  if(_35(__forms6) GREATER 2)
    set(__e121 _37cat("\n" __ind21))
  endif()
  set(__pad1 "${__e121}")
  set(__e122 "")
  if(is63(__pad1))
    set(__e122 _37cat("\n" indentation()))
  else()
    set(__e122 "")
  endif()
  set(__end1 "${__e122}")
  set(__s12 _37cat(__s12 either(__pad1 "")))
  set(____x269 pair(__forms6))
  set(____i25 0)
  while(____i25 LESS _35(____x269))
    set(____id51 ____x269[____i25])
    set(__k27 has(____id51 0))
    set(__v13 has(____id51 1))
    set(setenv("indent-level" toplevel ON).value has(setenv("indent-level" toplevel ON) "value") + 1)
    set(____x270 compile(__v13))
    set(setenv("indent-level" toplevel ON).value has(setenv("indent-level" toplevel ON) "value") - 1)
    set(__s12 _37cat(__s12 _37cat(__c9 _37cat(key(__k27) _37cat(__sep3 ____x270)))))
    set(__e123 "")
    if(_37eq(has(setenv("target" toplevel ON) "value") "cmake"))
      set(__e123 "")
    else()
      set(__e123 ",")
    endif()
    set(__c9 _37cat("${__e123}" either(__pad1 " ")))
    set(____i25 ____i25 + 1)
  endwhile()
  set(__e124 "")
  if(_37eq(has(setenv("target" toplevel ON) "value") "cmake"))
    set(__e124 "")
  else()
    set(__e124 "}")
  endif()
  return(PROPAGATE _37cat(__s12 _37cat(__end1 "${__e124}")))
endfunction()
setenv("%object" special ___37object__special)
function(___37list__special form comps cond ...)
  set(____r161 unstash(...))
  set(__form9 destash33(form ____r161))
  set(__comps1 destash33(comps ____r161))
  set(__cond6 destash33(cond ____r161))
  set(____id55 ____r161)
  set(__kind1 has(____id55 "kind"))
  set(__s14 compile(__form9))
  set(__e125 "")
  if(_37eq(__kind1 "object"))
    set(__e125 "{" "}")
  else()
    set(__e125 "[" "]")
  endif()
  set(____id56 "${__e125}")
  set(__lh6 has(____id56 0))
  set(__rh8 has(____id56 1))
  if(NOT( _37eq(__kind1 "object")))
    set(__s14 _37cat("(" _37cat(__s14 ")")))
  endif()
  set(____x278 __comps1)
  set(____i27 0)
  while(____i27 LESS _35(____x278))
    set(____id57 ____x278[____i27])
    set(__k29 has(____id57 0))
    set(__v15 has(____id57 1))
    set(__s14 _37cat(__s14 _37cat(" for " _37cat(compile(__k29) _37cat(" in " compile(__v15))))))
    set(____i27 ____i27 + 1)
  endwhile()
  if(is63(__cond6))
    set(__s14 _37cat(__s14 _37cat(" if " compile(__cond6))))
  endif()
  return(PROPAGATE _37cat(__lh6 _37cat(__s14 __rh8)))
endfunction()
setenv("%list" special ___37list__special)
function(compile_literal x)
  if(string_literal63(x))
    return(PROPAGATE inner(x))
  else()
    return(PROPAGATE compile(x))
  endif()
endfunction()
function(___37literal__special ...)
  set(__args18 unstash(...))
  return(PROPAGATE mapcat(compile_literal __args18))
endfunction()
setenv("%literal" special ___37literal__special)
function(__global__special x)
  if(_37eq(has(setenv("target" toplevel ON) "value") "py"))
    return(PROPAGATE _37cat(indentation() _37cat("global " _37cat(compile(x) "\n"))))
  else()
    return(PROPAGATE "")
  endif()
endfunction()
setenv("global" special __global__special stmt ON tr ON)
function(__import__special name ...)
  set(____r166 unstash(...))
  set(__name13 destash33(name ____r166))
  set(____id60 ____r166)
  set(__alias3 cut(____id60 0))
  set(__ind23 indentation())
  set(__e126 "")
  if(_37eq(hd(__alias3) "as"))
    set(__e126 __alias3[1])
  else()
    set(__e126 hd(__alias3))
  endif()
  set(__as2 "${__e126}")
  set(__id61 __as2 OR __name13)
  if(_37eq(has(setenv("target" toplevel ON) "value") "py"))
    set(__s16 _37cat(__ind23 _37cat("import " compile(__name13))))
    if(__as2)
      set(__s16 _37cat(__s16 _37cat(" as " compile(__id61))))
    endif()
    return(PROPAGATE __s16)
  else()
    return(PROPAGATE _37cat(__ind23 compile("%local" __id61 "require" escape(__name13))))
  endif()
endfunction()
setenv("import" special __import__special stmt ON)
function(__from__special name ...)
  set(____r170 unstash(...))
  set(__name15 destash33(name ____r170))
  set(____id64 ____r170)
  set(__imports1 cut(____id64 0))
  set(__ind25 indentation())
  set(__id65 __name15)
  set(__r171 "")
  set(__r171 drop(__imports1))
  set(__e127 "")
  if(_37eq(last(__imports1) "as"))
    set(__e127 drop(__imports1))
  else()
    add(__imports1 __r171)
    set(__r171 "")
    set(__e127 __r171)
  endif()
  "${__e127}"
  set(__as4 __r171)
  set(__e128 "")
  if(_37eq(hd(__imports1) "import"))
    set(__e128 tl(__imports1))
  else()
    set(__e128 __imports1)
  endif()
  set(__names3 "${__e128}")
  function(__f9 x)
    if(_37eq(x "*"))
      return(PROPAGATE x)
    else()
      return(PROPAGATE compile(x))
    endif()
  endfunction()
  set(__names4 mapcat(__f9 __names3 ", "))
  if(_37eq(has(setenv("target" toplevel ON) "value") "py"))
    set(__s18 _37cat(__ind25 _37cat("from " _37cat(compile(__name15) _37cat(" import " __names4)))))
    if(__as4)
      set(__s18 _37cat(__s18 _37cat(" as " compile(__as4))))
    endif()
    return(PROPAGATE __s18)
  else()
    return(PROPAGATE "")
  endif()
endfunction()
setenv("from" special __from__special stmt ON)
function(___44__special ...)
  set(__args20 unstash(...))
  if(none63(__args20))
    return(PROPAGATE ", ")
  else()
    if(one63(__args20))
      return(PROPAGATE _37cat(", " compile(hd(__args20))))
    else()
      return(PROPAGATE mapcat(compile __args20 ", "))
    endif()
  endif()
endfunction()
setenv("," special ___44__special)
function(__3458__special34 ...)
  set(__args22 unstash(...))
  if(none63(__args22))
    return(PROPAGATE ":")
  else()
    if(one63(__args22))
      return(PROPAGATE _37cat(":" compile(hd(__args22))))
    else()
      return(PROPAGATE mapcat(compile __args22 ":"))
    endif()
  endif()
endfunction()
setenv(":" special __3458__special34)
function(___37as__special form id)
  return(PROPAGATE _37cat(compile(form) _37cat(" as " compile(id))))
endfunction()
setenv("%as" special ___37as__special)
function(__yield__special ...)
  set(__args24 unstash(...))
  return(PROPAGATE _37cat(indentation() _37cat("yield " mapcat(compile __args24 ", "))))
endfunction()
setenv("yield" special __yield__special stmt ON)
function(__await__special x)
  set(__e129 "")
  if(_37eq(has(setenv("target" toplevel ON) "value") "lua"))
    set(__e129 "")
  else()
    set(__e129 "await ")
  endif()
  set(__a11 "${__e129}")
  return(PROPAGATE _37cat(__a11 compile(x)))
endfunction()
setenv("await" special __await__special)
function(___37b__special x)
  return(PROPAGATE _37cat("b" compile(x)))
endfunction()
setenv("%b" special ___37b__special)
function(___37f__special x)
  return(PROPAGATE _37cat("f" compile(x)))
endfunction()
setenv("%f" special ___37f__special)
function(___37r__special x)
  return(PROPAGATE _37cat("r" compile(x)))
endfunction()
setenv("%r" special ___37r__special)
function(___64__special x)
  return(PROPAGATE _37cat(indentation() _37cat("@" compile(x))))
endfunction()
setenv("@" special ___64__special stmt ON)
